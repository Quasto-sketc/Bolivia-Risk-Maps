[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Risk Mapping in the Cono Sur Region in Cochabamba, Bolivia",
    "section": "",
    "text": "Preface\nThis project involves a comprehensive analysis of natural phenomena like droughts, floods, and frosts, which significantly impact societal activities and infrastructure (Sun et al. 2020). Droughts, typified by extended periods of water scarcity due to reduced rainfall, are globally acknowledged for their detrimental economic consequences, resulting in widespread agricultural losses and livestock fatalities.\nRisk assessment is a pivotal component, originating from the complex interplay between threats and vulnerabilities within a society. Comprehending risk entails considering the likelihood of hazardous events and the susceptibility of the exposed population (U. S. National Committee for the Decade for Natural Disaster Reduction. 1991).\nEspecially drought-prone nations should establish national drought policies and preparedness plans based on available data. These plans should prioritize risk management over the traditional crisis management approach, which relies heavily on reactive emergency responses. The crisis management method undermines self-reliance and fosters dependence on government and external donors (Belal et al. 2014).\nPredicting risks forewarns about potential disasters, signifying the likelihood of future damages and losses caused by external events surpassing a society’s capacity to recover. Unmanaged risks culminate in disasters, emphasizing the importance of risk management policies within municipalities and dedicated planning bodies, essential for effective disaster response.\nThe project emphasizes the creation of threat maps, integrating local and technical perceptions of threats like drought, frosts and flood highlighting the complexity in defining these meteorological events.\nIn the Andean Region of Cochabamba, stakeholders have identified especially drought and frost as a persistent threat to agriculture and livestock, particularly during the winter months. This has led to the development of the following risk maps, which are essential for planning and mitigating disasters (Saxena et al. 2016).\nThe project methodology employs a general risk equation in conjunction with multicriteria evaluation techniques, integrating base information from various sources. The objective is to thoroughly assess the risk landscape, zone vulnerable areas, and identify threats such as floods, characterized by sudden increases in water levels causing significant economic and social disruptions (Trovato et al. 2017).\n\n\n\n\n\n\nBelal, Abdel Aziz, Hassan R. El-Ramady, Elsayed S. Mohamed, and Ahmed M. Saleh. 2014. “Drought Risk Assessment Using Remote Sensing and GIS Techniques.” Arabian Journal of Geosciences 7 (January): 35–53. https://doi.org/10.1007/s12517-012-0707-2.\n\n\nSaxena, Alder Keleman, Ximena Cadima Fuentes, Rhimer Gonzales Herbas, and Debbie L. Humphries. 2016. “Indigenous Food Systems and Climate Change: Impacts of Climatic Shifts on the Production and Processing of Native and Traditional Crops in the Bolivian Andes.” Frontiers in Public Health 4 (March): 175055. https://doi.org/10.3389/FPUBH.2016.00020/BIBTEX.\n\n\nSun, Ruiling, Ge Gao, Zaiwu Gong, and Jie Wu. 2020. “A Review of Risk Analysis Methods for Natural Disasters.” Natural Hazards 100 (January): 571–93. https://doi.org/10.1007/S11069-019-03826-7/METRICS.\n\n\nTrovato, Maria Gabriella, Dana Ali, Jessica Nicolas, Ammar El Halabi, and Sarah Meouche. 2017. “Landscape Risk Assessment Model and Decision Support System for the Protection of the Natural and Cultural Heritage in the Eastern Mediterranean Area.” Land 2017, Vol. 6, Page 76 6 (November): 76. https://doi.org/10.3390/LAND6040076.\n\n\nU. S. National Committee for the Decade for Natural Disaster Reduction., National Research Council (U.S.). 1991. “A Safer Future : Reducing the Impacts of Natural Disasters,” 67."
  },
  {
    "objectID": "Drought_Risk.html#sec-sec-drought",
    "href": "Drought_Risk.html#sec-sec-drought",
    "title": "1  Drought Risk",
    "section": "1.1 Frame of Reference",
    "text": "1.1 Frame of Reference\nThis study was conducted in four areas of Cochabamba’s Valle Alto region: Aiquile, Pasorapa, Pojo, and Totoro. These areas are known for their vast farmlands that produce a variety of crops.\nMountain water sources are vital for irrigation in these and other areas. However, there have been disputes over water rights within and between these areas. Changes in climate patterns have led to concerns about water security, causing extended periods of water shortage.\nThe goal of this study is to develop a method to identify potential weather risks like drought, frost, and flood, Taking into account the distinctive physical and social attributes of the four states within the Bolivian high valley region. The findings are intended to support risk prevention policies in all four areas.\nThis study uses a cost-effective, scientific, and adaptable approach to different situations. It combines detailed physical aspects, and aims to influencing decisions about land and natural resource management. This method could potentially be used in other regions and nationally.\nDrought is a weather event that happens when there’s less rainfall than average over a period, causing a significant and long-lasting water shortage that affects human activities. Droughts, which are becoming more common worldwide, are among the most economically damaging natural events, leading to the loss of large areas of crops and the death of many livestock.\nRisk is the result of the dynamic relationship between threats and vulnerabilities within a society or its specific components. It’s calculated using the following equation: Risk depends on the likelihood of hazardous events happening and the presence of a vulnerable population exposed to the threat. This means that if there’s no threat, there’s no risk, or if the population isn’t vulnerable, the risk is zero.\nRisk predicts the probability of future disasters, indicating the potential future damage and losses associated with the impact of an external physical event on a vulnerable society, exceeding the society’s ability to recover from such impacts on its own.\nDisasters happen because of unmanaged risks. Therefore, it’s important for areas to establish risk management policies and create planning bodies like a “Risk Management Unit,” equipped with planning tools and instruments. Risk maps are important tools for land planning that greatly help with risk management.\nA group of development workers known as the Equipo Cono Sur, from the NGO Agrecol Andes, are focused on helping communities and governments in the Cochabamba’s Valle Alto region: including special efforts in Aiquile, Pasorapa, Pojo, and Totoro prepare for future challenges such as droughts, frosts, and floods. They aim to adapt local residents and governments to these risks.\nAdditionally, they recently conducted a case study on Recharge Zones (called “Zonas de Recarga Hídrica” in Spanish) using a similar professional approach as this Multicriteria Analysis Case Study. This Document can been viewed here: Multicriterianalysis Recarga Hídrica (2023).\n\n\nCode\n# read libraries\nlibrary(raster)\nlibrary(terra)\nlibrary(ggplot2)\nlibrary(tmap)\nlibrary(sf)\nlibrary(dplyr)\nlibrary(tibble)\nlibrary(knitr)\nlibrary(webshot2)\nlibrary(plotly)\nlibrary(geodata)\nlibrary(stringr)\n\n\n\n\nCode\nbol   &lt;- read_sf(\"gadm41_BOL_3.shp\", crs = 4326) # Pasorapa extent\n\n# pop &lt;- rast(\"gpw_v4_population_count_rev11_2020_2pt5_min.tif\")\n\n# river data \n# river &lt;- read_sf(\"HydroRIVERS_v10_sa.shp\")\n\n## raster\n# dem &lt;- rast(\"s20w070_dem.tif\")\n\n## Land use # (only 11 classes)\n# land &lt;- read_sf(\"cob_uso.shp\")\n\n# Data from Tito (only 3 classes)\n# land_new &lt;- rast(\"uso_suelo.tif\")\n\n# land_filter &lt;- land %&gt;% filter(!USO %in% c(\"Recreativo: Escénico, Turístico\", \"Productivo Aguas Superficiales Mixto: Generación de energía eléctrica Agua para riego, Pesca, Captación de Agua potable, Transporte Fluvial\", \"Extractivo Minero en parte: Explotación de yacimientos mineros; Por sectores escaso pastoreo directo\", \"Productivo Aguas Superficiales Mixto: Generación de energía eléctrica Agua para riego, Pesca, Captación de Agua potable, Transporte Fluvial\", \"Extractivo Minero, Productivo Agropecuario, Protectivo, Vida silvestre\", \"Productivo Agropecuario, Extractivo Forestal y Petrolero: Cultivos Alimenticios, Pastoreo directo por sectores, Productos Maderables y no Maderables, Extracción de Combustibles fósiles\", \"Productivo Agropecuario, Extractivo Forestal: Pastoreo, Ramoneo, Cultivos alimenticios en algunos sectores, Extracción de Leña en parte\")) \n\n\n\n\nCode\n# select municipalities\n\ncocha &lt;- bol %&gt;% filter(NAME_1 == \"Cochabamba\")\n\n# filter der bol shapes Aiquile\nPasorapa &lt;- cocha %&gt;% filter(NAME_3 == \"Pasorapa\")\nAiquile  &lt;- cocha %&gt;% filter(NAME_3 == \"Aiquile\")\n\n# new\ntotora   &lt;- cocha %&gt;% filter(NAME_3 == \"Totora\")\npojo     &lt;- cocha %&gt;% filter(NAME_3 == \"Pojo\")\n\n# read bol_1.shp and Cochabamba.shp\nbol_1      &lt;- read_sf(\"bol_1.shp\")\nCochabamba &lt;- read_sf(\"Cochabamba.shp\")\n\n# plot first map\ntm_shape(bol_1) +\n  tm_polygons(alpha = 0.2) +\n  tm_borders(lwd = 2,) +\n  tm_layout(frame = FALSE) +\ntm_shape(Cochabamba) +  \n  tm_borders(lwd = 2, col = \"red\") +\n    tm_text(\"NAME_1\", size = 0.7) +\n   tm_scale_bar(breaks = c(0, 100, 250), text.size = 0.9, position = c(\"right\")) +\n    tm_compass(type = \"4star\", size = 6, position = c(\"right\", \"top\")) +\n  tm_credits(\"Data source: gdm.org\", fontface = \"italic\", align = \"center\") + tm_graticules(alpha = 0.3) +\n  tm_layout(\n    legend.text.size = 1,\n    legend.position = c(\"left\", \"bottom\"),\n    legend.outside = TRUE\n  )\n\n# cocha is an sf object containing the extent you want to highlight\n\n# Main map with transparent extent of cocha\nmain_map &lt;- tm_shape(cocha) +\n  tm_sf(alpha = 0.2)  # Adjust alpha for transparency\n\n# Additional maps for municipalities\nmunicipality_maps &lt;- tm_shape(Pasorapa) +\n  tm_sf() +\n  tm_shape(Aiquile) +\n  tm_sf() +\n  tm_shape(totora) +\n  tm_sf() +\n  tm_shape(pojo) +\n  tm_sf()\n\n# Combine all municipalities into a single sf object\nall_municipalities &lt;- rbind(Pasorapa, Aiquile, totora, pojo)\n\n# Minimap with labels\nminimap &lt;- tm_shape(all_municipalities) +\n  tm_borders(lwd = 2, col = \"red\") +\n  tm_layout(frame = FALSE) +\n  tm_text(\"NAME_3\", size = 0.7) +\n   tm_scale_bar(breaks = c(0, 25, 50), text.size = 0.9, position = c(\"left\")) +\n  tm_graticules(alpha = 0.3) +\n  tm_layout(\n    legend.text.size = 1,\n    legend.position = c(\"left\", \"bottom\"),\n    legend.outside = TRUE\n  )\n\n# Combine all maps\nfinal_map &lt;- main_map + minimap\n\n# Plot the map\nfinal_map\n\n\n\n\n\n\n\n\n(a) Map of the Plurinational State of Bolivia\n\n\n\n\n\n\n\n(b) Map of Municipalities of Cochabamba and its 4 Municipalities of interest\n\n\n\n\nFigure 1.1: Overview of the frame of Reference Cochabamba and its four Municipalities: Aiquile, Pasorapa, Pojo & Totora\n\n\n\n\n\nCode\n## Literature Review\n\n# Table 1: Publications Analysis\npublications &lt;- data.frame(\n  Source = c(\n    \"[European Drought Risk Atlas](https://joint-research-centre.ec.europa.eu/jrc-news-and-updates/drought-risk-atlas-heightened-risk-threatens-environment-and-economy-2023-10-11_en)\",\n    \"[Arabian Journal of Geosciences](https://link.springer.com/article/10.1007/s12517-012-0707-2)\",\n    \"[MDPI](https://www.mdpi.com/2073-445X/12/6/1184)\",\n    \"[Drought Risk Atlas](https://www.drought.gov/data-maps-tools/drought-risk-atlas)\",\n    \"[MDPI](https://www.mdpi.com/2073-4441/12/7/1862)\"\n  ),\n  Description = c(\n    \"Comprehensive assessment and mapping of drought risks and impacts in the EU for 1.5, 2, and 3 degrees of global warming.\",\n    \"Study on 'Drought risk assessment using remote sensing and GIS techniques'.\",\n    \"Agricultural Drought Risk Assessment model considering exposure, hazard, vulnerability, and mitigation capacity.\",\n    \"The Drought Risk Atlas provides historical drought data until 2017 for US weather stations with 40+ years of records, enabling users to explore various drought indices, stats, thresholds, and comparisons.\",\n    \"Drought Risk Analysis, Forecasting and Assessment under Climate Change.\"\n  )\n)\n\n# Table 2: Drought Risk Variables and Data Availability\nvariables_data &lt;- data.frame(\n  Variable = c(\"minimum temperature\", \"maximum temperature\", \"precipitation\", \"solar radiation\", \"wind speed\"),\n  Value_Type = c(\"(°C)\", \"(°C)\", \"(mm)\", \"(kJ m-2 day-1)\", \"(m s-1)\"),\n  Source = c(\"WorldClim\", \"WorldClim\", \"WorldClim\", \"WorldClim\", \"WorldClim\"),\n  Status = c(\"Used\", \"Used\", \"Used\", \"Not Used\", \"Not Used\")\n)\n\n# Displaying the data frames\nprint(\"Publications Analysis:\")\nprint(publications)\n\nprint(\"\\nDrought Risk Variables and Data Availability:\")\nprint(variables_data)"
  },
  {
    "objectID": "Drought_Risk.html#methodology-of-the-case-study",
    "href": "Drought_Risk.html#methodology-of-the-case-study",
    "title": "1  Drought Risk",
    "section": "1.2 Methodology of the Case Study",
    "text": "1.2 Methodology of the Case Study\nThis Multicriteria Analysis employs numerous Raster and Vector Layers, integrating weighted factors. The entire project is conducted within the R-Studio Environment. Key packages utilized in achieving the final results are listed here R-Studio Libraries, delivering essential functions for the conducted calculations.\nTable 1.1 shows the data used in order to conduct the multicriteria analysis on the four municipalities in the Cono Sur Region in Cochabamba, Bolivia.\nTable 1.2 presents the classification and evaluation of various criteria for drought exposure, illustrating the factors influencing each classification. This table outlines the criteria and their corresponding classifications as follows.\nThe subsequent sections present the reclassified data for four municipalities in the state of Cochabamba. These sections detail the process of cleaning and further processing the raw data, with relevant code snippets linked to the Appendix for reference.\n\n\nCode\n# Creating a table\nshapes &lt;- c(\"Riverdata\", \"Political Map\", \"Precipitation\", \"Temperature\", \"DEM\")\ndata_type &lt;- c(\"Vector\", \"Vector\", \"Raster (30 s)\", \"Raster (30 s)\", \"Raster (15 s)\")\n\nsources &lt;- c(\n  \"@linke2019global\", \n  \"[gadm.org](https://gadm.org/download_country.html)\",\n  \"@fick2017worldclim\", \n  \"@fick2017worldclim\", \n  \"[Hydrosheds.org](https://www.hydrosheds.org/hydrosheds-core-downloads)\")\n\nperiod &lt;- c(\"2013\", \"2024\", \"1970-2000\", \"1970-2000\", \"2013\")\n\n# Repeat the sources based on the number of shapes\nrepeated_sources &lt;- rep(sources, length.out = length(shapes))\n\n# Create the data frame\ndata &lt;- data.frame(Data = shapes, Types = data_type, Source = repeated_sources, Period_Year = period)\n\ncolnames(data) &lt;- c(\"Data\", \"Types\", \"Source\", \"Period/Year\")\n\nkable(data)\n\n\n\n\nTable 1.1: Used Data in the Analysis\n\n\n\n\n\n\n\n\nData\nTypes\nSource\nPeriod/Year\n\n\n\n\nRiverdata\nVector\nLinke et al. (2019)\n2013\n\n\nPolitical Map\nVector\ngadm.org\n2024\n\n\nPrecipitation\nRaster (30 s)\nFick and Hijmans (2017)\n1970-2000\n\n\nTemperature\nRaster (30 s)\nFick and Hijmans (2017)\n1970-2000\n\n\nDEM\nRaster (15 s)\nHydrosheds.org\n2013\n\n\n\n\n\n\n\n\nCode\n# Creating a sample data frame\ndata &lt;- data.frame(\n  Criteria = c(\"River Data\", \"Maximum Temperature\", \"DEM (Inclination)\", \"DEM (Perspective)\", \"Precipitation\"),\n  `Very High` = c(\"&lt;200\", \"&gt;30\", \"&gt;45\", \"&lt;45°\", \"&lt;513.8\"),\n  High        = c(\"200-700\", \"27-30\", \"20-30\", \"45-135°\", \"514-571\"),\n  Moderate    = c(\"700-2000\", \"25-27\", \"20-30\", \"135-225°\", \"571-640\"),\n  Low         = c(\"2000-5000\", \"\", \"10-20\", \"225-315°\", \"640-1058\"),\n  `Very Low`  = c(\"&gt;5000\", \"&lt;25\", \"&lt;10\", \"&gt;315°\", \"&gt;1058\"),\n  `Weights`   = c(2, 2, 1.5, 1.5, 3)\n)\n\n# Visualizing the table with kable\nkable(data, align = \"c\")\n\n\n\n\nTable 1.2: Classiﬁcation and evaluation of drought exposure according to factors\n\n\n\n\n\n\n\n\n\n\n\nCriteria\nVery.High\nHigh\nModerate\nLow\nVery.Low\nWeights\n\n\n\n\nRiver Data\n&lt;200\n200-700\n700-2000\n2000-5000\n&gt;5000\n2.0\n\n\nMaximum Temperature\n&gt;30\n27-30\n25-27\n\n&lt;25\n2.0\n\n\nDEM (Inclination)\n&gt;45\n20-30\n20-30\n10-20\n&lt;10\n1.5\n\n\nDEM (Perspective)\n&lt;45°\n45-135°\n135-225°\n225-315°\n&gt;315°\n1.5\n\n\nPrecipitation\n&lt;513.8\n514-571\n571-640\n640-1058\n&gt;1058\n3.0\n\n\n\n\n\n\n\n\nCode\n# Land Use\n\nplotly &lt;- land %&gt;% \nggplot(aes(fill = USO)) +\n  geom_sf() +\n theme(legend.position = \"none\")\n\nggplotly(plotly)\n\n\n\n\nCode\nland_new %&gt;% plot()\n\n# reclass\n# Create a tibble with the reclassification table\nreclass_land_use &lt;- tribble(\n  ~from, ~to, ~becomes,\n  2,    2,  1,     # Productivo: Alimenticios de consumo, subsistencia y mercado local.\n  2,    3,  0.75,  # Extractivo Forestal: Pastoreo, Ramoneo, Cultivos alimenticios en algunos sectores, Extracción de Leña en parte\n  3,    4,  0.5,   # Productivo Agropecuario, Extractivo Forestal y Petrolero\n  4,    5,  0.25,  # nada\n  )\n\n# Reclassify the slope raster based on the reclassification table\nriver_reclassified &lt;- terra::classify(land_new, reclass_table_river,\n                      include.lowest = TRUE, right = TRUE)\n\nkable(reclass_table_river)\n\nplot(river_reclassified)\n\n\n\n\nCode\n# Read data and crop to Pasorapa\n# read data \n\n## shapes\n# veg   &lt;- read_sf(\"veg_nv_bol_geo.shp\") # Vegetation\n# geo   &lt;- read_sf(\"Geologia.shp\") # Geografia\n# geo   &lt;- read_sf(\"geologia.shp\", crs = 4326)   # Geografia\n# dsmw  &lt;- read_sf(\"DSMW.shp\", crs = 4326)\n\n# other kind of vegetation\n# se_bo_geo &lt;- read_sf(\"se_bo_geo.shp\")\n\n# temperatur min\n# tmin01 &lt;- rast(\"wc2.1_30s_tmin_01.tif\")\n# tmin02 &lt;- rast(\"wc2.1_30s_tmin_02.tif\")\n# tmin03 &lt;- rast(\"wc2.1_30s_tmin_03.tif\")\n# tmin04 &lt;- rast(\"wc2.1_30s_tmin_04.tif\")\n# tmin05 &lt;- rast(\"wc2.1_30s_tmin_05.tif\")\n# tmin06 &lt;- rast(\"wc2.1_30s_tmin_06.tif\")\n# tmin07 &lt;- rast(\"wc2.1_30s_tmin_07.tif\")\n# tmin08 &lt;- rast(\"wc2.1_30s_tmin_08.tif\")\n# tmin09 &lt;- rast(\"wc2.1_30s_tmin_09.tif\")\n# tmin10 &lt;- rast(\"wc2.1_30s_tmin_10.tif\")\n# tmin11 &lt;- rast(\"wc2.1_30s_tmin_11.tif\")\n# tmin12 &lt;- rast(\"wc2.1_30s_tmin_12.tif\")\n\n# temperatur max\n# tmax01 &lt;- rast(\"wc2.1_30s_tmax_01.tif\")\n# tmax02 &lt;- rast(\"wc2.1_30s_tmax_02.tif\")\n# tmax03 &lt;- rast(\"wc2.1_30s_tmax_03.tif\")\n# tmax04 &lt;- rast(\"wc2.1_30s_tmax_04.tif\")\n# tmax05 &lt;- rast(\"wc2.1_30s_tmax_05.tif\")\n# tmax06 &lt;- rast(\"wc2.1_30s_tmax_06.tif\")\n# tmax07 &lt;- rast(\"wc2.1_30s_tmax_07.tif\")\n# tmax08 &lt;- rast(\"wc2.1_30s_tmax_08.tif\")\n# tmax09 &lt;- rast(\"wc2.1_30s_tmax_09.tif\")\n# tmax10 &lt;- rast(\"wc2.1_30s_tmax_10.tif\")\n# tmax11 &lt;- rast(\"wc2.1_30s_tmax_11.tif\")\n# tmax12 &lt;- rast(\"wc2.1_30s_tmax_12.tif\")\n\n# precipitacion\n# precip01 &lt;- rast(\"wc2.1_30s_prec_01.tif\")\n# precip02 &lt;- rast(\"wc2.1_30s_prec_02.tif\")\n# precip03 &lt;- rast(\"wc2.1_30s_prec_03.tif\")\n# precip04 &lt;- rast(\"wc2.1_30s_prec_04.tif\")\n# precip05 &lt;- rast(\"wc2.1_30s_prec_05.tif\")\n# precip06 &lt;- rast(\"wc2.1_30s_prec_06.tif\")\n# precip07 &lt;- rast(\"wc2.1_30s_prec_07.tif\")\n# precip08 &lt;- rast(\"wc2.1_30s_prec_08.tif\")\n# precip09 &lt;- rast(\"wc2.1_30s_prec_09.tif\")\n# precip10 &lt;- rast(\"wc2.1_30s_prec_10.tif\")\n# precip11 &lt;- rast(\"wc2.1_30s_prec_11.tif\")\n# precip12 &lt;- rast(\"wc2.1_30s_prec_12.tif\")\n\n## Satellite Data\n# sat_full &lt;- rast(\"sat_full.tiff\")\n\n# Land Use\n# land &lt;- rast(\"Change_10S_070W.tif\")\n\n# print(land, vp = grid::viewport(0.8, 0.185, width = 0.2, height = 0.45))\n\n\n\n\nCode\n# River Data\n##  200 meters Buffer River data\nbuffer_river &lt;- sf::st_buffer(Pasorapa, 200)\n\n# river_crop &lt;- st_intersection(river, buffer_river)\n# write_sf(river_crop, \"river_crop.shp\", overwrite = TRUE)\n\n\n\n\nCode\n# Pop\n##  crop and mask dem\n# pop_crop &lt;- terra::crop(pop, Aiquile)\n# pop_mask &lt;- mask(pop_crop, Aiquile)\n\n# writeRaster(dem_mask, \"dem_mask_pasorapa.tif\")\n\n# River Data\n##  200 meters Buffer River data\nbuffer_river &lt;- sf::st_buffer(Aiquile, 200)\n\n# river_crop &lt;- st_intersection(river, buffer_river)\n# write_sf(river_crop, \"river_crop.shp\", overwrite = TRUE)\n\n\n\n\nCode\n# st_write(nc, paste0(tempdir(), \"/\", \"nc.shp\"))\n\n## terrain\nterrain  &lt;- terrain(dem_mask)\n\n# land\n##  crop and mask dem\nland_crop          &lt;- terra::crop(land, Pasorapa)\nland_mask_pasorapa &lt;- mask(land_crop, Pasorapa)\n\n# sf_use_s2(FALSE) # quick fix\n\n\n\n\nCode\n## terrain\nterrain_aiquile   &lt;- terrain(dem_mask_aiquile)\n\nterrain_pasorapa  &lt;- terrain(dem_mask_pasorapa)\n\n# land\n##  crop and mask dem\nland_crop &lt;- terra::crop(land, Aiquile)\nland_mask_aiquile &lt;- mask(land_crop, Aiquile)\n\n\n\n\n1.2.1 River Data\nThe data utilized aimed to estimate the distance to rivers, serving as a proxy for assessing the likelihood of drought occurrences. The underlying assumption was that greater distances from rivers correspond to increased drought probabilities. To calculate distances, the terra::distance function was employed on the river shapefiles associated with various municipalities. Detailed processing steps are outlined in the subsequent chapter of the Appendix.\nThe reclassification has been calculated according to Table 1.2. Defining the classification values Gao et al. (2023) has been using different values in order to classify and evaluate drought exposure, hazard factors, vulnerability, and mitigation capacity.\n\n\nCode\nriver_crop &lt;- read_sf(\"river_crop.shp\")\n\nbuffer_river &lt;- st_buffer(river_crop, 100)\n\n# Create an empty raster to rasterize into\nempty_raster &lt;- raster(extent(buffer_river), resolution = c(0.0008333333, 0.0008333333))\n\n  # Rasterize\nriver_raster &lt;- terra::rasterize(buffer_river, empty_raster, field = \"CATCH_SKM\")\n\n# , background = 0\n\n  # calc into %\nriver_raster &lt;- (river_raster / 100)\n\n# River\n##  crop and mask dem\nriver_crop &lt;- terra::crop(river_raster, Pasorapa)\nriver_mask &lt;- mask(river_crop, Pasorapa)\n\n# plot(river_mask)\n\n\n\n\nCode\n    # Define a common CRS for all your rasters\ncommon_crs &lt;- \"+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0\"\n\n# Assign the CRS to each raster\ncrs(river_raster) &lt;- crs(river_subset_sp) &lt;- common_crs\n\n# Calculate distances on the subset\ndist_to_river &lt;- terra::distance(river_mask)\n\n# writeRaster(dist_to_river, \"dist_to_river_pasorapa.tif\")\n\ndist_to_river &lt;- rast(\"dist_to_river_pasorapa.tif\")\n\n# Plot the distances raster\nplot(dist_to_river)\n\n\n\n\nCode\n# write / safe Raster\n# writeRaster(dist_to_river, \"dist_to_river_pasorapa.tif\")\ndist_to_river &lt;- rast(\"dist_to_river_pasorapa.tif\")\n\n# River\n##  crop and mask dem\nriver_crop &lt;- terra::crop(dist_to_river, Pasorapa)\nriver_mask &lt;- mask(river_crop, Pasorapa)\n\n# reclass\n# Create a tibble with the reclassification table\nreclass_table_river &lt;- tribble(\n  ~from, ~to, ~becomes,\n  5000,    Inf,  1,     \n  2000,    5000,  0.75,  \n  700,    2000,  0.5,    \n  200,    700,  0.25,   \n  -Inf,   200,  0       \n)\n\n# Reclassify the slope raster based on the reclassification table\nriver_reclassified_pasorapa &lt;- terra::classify(river_mask, reclass_table_river, include.lowest = TRUE, right = TRUE)\n\n# kable(reclass_table_river)\n\n# write/ safe Raster\ndist_to_river &lt;- rast(\"dist_to_river_aiquile.tif\")\n\ncommon_crs &lt;- \"+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0\"\n\n# Assign the CRS to each raster\ncrs(dist_to_river) &lt;- common_crs\nst_crs(Aiquile)    &lt;- common_crs\n\n# River\n##  crop and mask dem\nriver_crop &lt;- terra::crop(dist_to_river, Aiquile)\nriver_mask &lt;- mask(river_crop, Aiquile)\n\n# reclass\n# Create a tibble with the reclassification table\nreclass_table_river &lt;- tribble(\n  ~from, ~to, ~becomes,\n  5000,    Inf,  1,     \n  2000,    5000,  0.75,  \n  700,    2000,  0.5,    \n  200,    700,  0.25,   \n  -Inf,   200,  0       \n)\n\n# Reclassify the slope raster based on the reclassification table\nriver_reclassified_aiquile &lt;- terra::classify(river_mask, reclass_table_river, include.lowest = TRUE, right = TRUE)\n\n# read totora data\n\nriver_totora &lt;- readRDS(\"river_totora.rds\")\nriver_pojo   &lt;- readRDS(\"river_pojo.rds\")\n\n\n\n?(caption)\n\n\n\n\n\nCode\n# Define breaks and labels for the reclassification\nbreaks &lt;- c(0, 0.25, 0.5, 0.75, 1)\n\n# change name\nnames(river_reclassified_pasorapa) &lt;- \"Drought Risk\"\n\n# Color Palette in R\ncolors   &lt;- c(\"darkgreen\",\"lightgreen\",\"yellow\", \"orange\",\"red\")\ncolors_1 &lt;- c(\"darkgreen\",\"lightgreen\",\"yellow\", \"orange\")\n\n# view\ntmap_mode(\"plot\")\n\ntm_shape(all_municipalities) +\n  tm_polygons() +\ntm_shape(river_reclassified_pasorapa) +\n  tm_raster(palette = colors) + \ntm_shape(river_reclassified_aiquile) +\n  tm_raster(legend.show = FALSE, palette = colors) +  \ntm_shape(river_totora) +\n  tm_raster(legend.show = FALSE, palette = colors) +  \ntm_shape(river_pojo) +\n  tm_raster(legend.show = FALSE, palette = colors_1) +  \ntm_shape(all_municipalities) +\n    tm_borders(lwd = 2, col = \"black\") +\n    tm_layout(frame = FALSE) +\n  tm_text(\"NAME_3\", size = 0.7) +\n    tm_scale_bar(breaks = c(0, 5, 10), text.size = 0.9, position = c(\"left\")) +  \n  tm_compass(type = \"4star\", size = 6, position = c(\"right\", \"top\")) +\n  tm_credits(\"Author: Johannes Quente\", fontface = \"italic\", align = \"right\") +\n  tm_graticules(alpha = 0.3) +\n  tm_layout(\n    legend.text.size = 1,\n    legend.position = c(\"left\", \"bottom\"),\n    legend.outside = TRUE\n  )\n\n\n\n\n\nFigure 1.2: River reclassification\n\n\n\n\n\n\nCode\n## Land Use (decided to not use)\n\n### Rasterize\n# land_filter_filter &lt;- land_filter %&gt;% filter(USO == \"Productivo Ganadero: Pastoreo directo, forrajeo de aves.\")\n\n  # land$USO %&gt;% unique()\n\n# Define your extent and resolution for the raster template\nextent_template     &lt;- extent(land)  # Define the extent\nresolution_template &lt;- 100  # Define the resolution\n\n# Create an empty raster template\nraster_template &lt;- raster(extent_template, resolution = resolution_template)\n\n# Convert SIMBOLO to factor\nland$USO &lt;- as.factor(land$USO)\n\n# Rasterize\nland_raster &lt;- rasterize(land, raster_template, field = \"USO\", backround = 0)\n\n# writeRaster(geo_raster, \"geo_raster.tif\", overwrite=TRUE)\n\n\n\n\nCode\n### reproject\n# Define the UTM zone for Cochabamba (Zone 20S)\nutm_crs &lt;- \"+proj=utm +zone=20 +south +datum=WGS84 +units=m +no_defs\"\n\n# Create a SpatialPointsDataFrame directly from filtered_ec\nland_transformed &lt;- st_as_sf(land, coords = c(\"X\", \"Y\"), crs = utm_crs)\n\n# Transform to WGS84\nland_transformed_wgs84 &lt;- st_transform(land_transformed, crs = \"+proj=longlat +datum=WGS84\")\n\n# Extract extent from the transformed SpatialPointsDataFrame\nnew_extent &lt;- st_bbox(land_transformed_wgs84)\n\n# Modify the extent of the raster layer to match the new extent\nraster_layer_with_new_extent &lt;- setExtent(land_raster, new_extent)\n\n# writeRaster(raster_layer_with_new_extent, \"raster_layer_with_new_extent.tif\")\n\n# plot(raster_layer_with_new_extent)\n\n\n\n\nCode\n# label: tbl-land-reclass\n# tbl-cap: \"Reclassification table of the Land-Use Data\"\n\n### Reclass\n# Create a tibble with the reclassification table\nreclass_table_land &lt;- tribble(\n  ~from, ~to, ~becomes,\n  1, 1, 1,    \n  1, 2, 1,    \n  2, 3, 1,      \n  3, 4, 1,    \n  4, 5, 1,    \n  5, 6, 0,  \n  6, 7, 0,      \n  7, 8, 1,    \n  8, 9, 0,      \n  9, 10, 1,  # cambio   \n  10, 11, 1\n)\n\n# Assuming you have a slope raster 'slope_raster'\n# Reclassify the slope raster based on the reclassification table\nland_reclassified &lt;- reclassify(raster_layer_with_new_extent, reclass_table_land, include.lowest = TRUE, right = TRUE)\n\n# Align Vegetation-Raster\n# geo_reclassified &lt;- rast(geo_reclassified)\n\n# Adding a new column C to the data frame\nreclass_table_land$Class &lt;- c(\n  \"Productivo Agropecuario, Extractivo Forestal\",\n  \"Productivo Agropecuario: Pastoreo, en sectores Cultivos alimenticios\",\n  \"Productivo Ganadero: Escaso pastoreo directo\",\n  \"Productivo: Alimenticios de consumo, subsistencia y mercado local.\",\n  \"Productivo Ganadero: Pastoreo directo, forrajeo de aves.\",\n  \"Extractivo Minero en parte\",\n  \"Productivo Aguas Superficiales Mixto\",\n  \"Productivo Agropecuario: Cultivos alimenticios\",\n  \"Extractivo Minero, Productivo Agropecuario, Protectivo, Vida silvestre\",\n  \"Recreativo: Escénico, Turístico\",\n  \"Productivo Agropecuario, Extractivo Forestal y Petrolero\"\n)\n\n# kable(reclass_table_land)\n\n\n\n\nCode\n# label: fig-land-use\n# fig-cap: \"Reclassification Result of Pasorapa\"\n# fig-subcap: \n# -  \"Reclassification Result of Pasorapa\"\n# -  \"Reclassification Result of Aiquile\"\n# fig-width: 5\n# fig-height: 6\n# layout-nrow: 1\n\n# check\ntmap_mode(\"plot\")\n\ntm_shape(land_reclassified, labels = \"New Legend Label\") +\n    tm_raster(style = \"cat\", palette = \"Reds\") +\n    tm_scale_bar(breaks = c(0, 5, 10), text.size = 0.9, position = c(\"left\")) +\n   tm_compass(type = \"4star\", size = 6, position = c(\"right\", \"top\")) +\n  tm_credits(\"Data source: geo.gob.bo\", fontface = \"italic\", align = \"right\") + tm_graticules(alpha = 0.3) +\n  tm_layout(\n    legend.text.size = 1,\n    legend.position = c(\"left\", \"bottom\"),\n    legend.outside = TRUE\n  )\n\n\n\n\n\n1.2.2 Maximum Temperature Data\nThe Temperature Data from worldclim.org which consists of a variety of global weather data on an 30 Arc Second Accuracy. This data has been used to calculate the highest temperatures over all the available 12 Raster-Layers of the different months. The Result is one Raster-Layer that contains the highest temperatures of the average year from 1970-2000. The reclassification has been calculated according to Table 1.2.\nThe provided code implements automation to improve the processing of multiple Rasterlayers, consolidating them into a single Rasterlayer containing the minimum values across the dataset. This approach aims to enhance efficiency and simplify the workflow of raster data analysis. The Code used can be seen in the Appendix.\n\n\nCode\n### Processing\n\n# LOOP\n\n# Crear una lista con los nombres de los objetos\nlista_temp &lt;- paste0(\"tmax\", sprintf(\"%02d\", 1:12))  \n# Generate names precip01 until precip12\n\n# Inicializar una lista vacía para almacenar los resultados\nlista_tmax_mask &lt;- list()\n\n# Iterar sobre cada objeto y aplicar las operaciones\nfor (i in seq_along(lista_temp)) {\n  # Acceder al objeto con el nombre correspondiente\n  tmax_obj &lt;- get(lista_temp[i])\n  \n  # Aplicar las operaciones crop y mask\n  tmax_crop &lt;- terra::crop(tmax_obj, Pasorapa)\n  tmax_mask &lt;- mask(tmax_crop, Pasorapa)\n  \n  # Almacenar el resultado en la lista\n  lista_tmax_mask[[i]] &lt;- tmax_mask\n}\n\n# Mostrar la lista de resultados (en caso de querer acceder a cada uno)\n# lista_tmax_mask\n\n# Para visualizar un objeto específico (por ejemplo, el primer objeto)\n\nplot(lista_tmax_mask[[08]])\n\n# Stack the Values and calc the min for everything\n\n# Use rast() to convert the list to a SpatRaster object\nstacked_rasters &lt;- terra::rast(lista_tmax_mask)\n\n# Apply the cellStats function to find the minimum value for each pixel across the stack\nmax_values &lt;- terra::app(stacked_rasters, fun = max, na.rm = TRUE)\n\n# saveRDS(max_values, file = \"max_temp_pasorapa.rds\")\n# \n# max_temp_pasorapa &lt;- readRDS(\"max_temp_pasorapa.rds\")\n\n# Plot the resulting raster\n# plot(max_values)\n\n\n\n\nCode\nmax_temp_pasorapa &lt;- readRDS(\"max_temp_pasorapa.rds\")\n\n# reclass\n# Create a tibble with the reclassification table\nreclass_table_max_temp &lt;- tribble(\n  ~from, ~to, ~becomes,\n  -Inf, 25, 0.2,    \n  25, 27, 0.4,   \n  27, 30, 0.6,   \n  30, Inf, 1\n)\n\n# Reclassify the slope raster based on the reclassification table\nmax_temp_reclassified_pasorapa &lt;- terra::classify(max_temp_pasorapa, reclass_table_max_temp, include.lowest = TRUE, right = TRUE)\n\n# kable(reclass_table_max_temp)\n\n# read data aiquile\nmax_temp_aiquile &lt;- readRDS(\"max_temp_aiquile.rds\")\n\n# Reclassify the slope raster based on the reclassification table\nmax_temp_reclassified_aiquile &lt;- terra::classify(max_temp_aiquile, reclass_table_max_temp, include.lowest = TRUE, right = TRUE)\n\n# Totora\n\nmax_temp_totora &lt;- readRDS(\"max_temp_totora.rds\")\n\n# Reclassify the slope raster based on the reclassification table\nmax_temp_reclassified_totora &lt;- terra::classify(max_temp_totora, reclass_table_max_temp, include.lowest = TRUE, right = TRUE)\n\n# Pojo\n\nmax_temp_pojo &lt;- readRDS(\"max_temp_pojo.rds\")\n\n# Reclassify the slope raster based on the reclassification table\nmax_temp_reclassified_pojo &lt;- terra::classify(max_temp_pojo, reclass_table_max_temp, include.lowest = TRUE, right = TRUE)\n\n\n\n?(caption)\n\n\n\n\n\nCode\n# Define breaks and labels for the reclassification\nbreaks &lt;- c(0, 0.2, 0.4, 0.6, 1)\n# labels &lt;- c(\"Muy bajo\", \"Bajo\", \"Moderado\", \"Alto\", \"Muy alto\")\n\n# Cut the raster values into categorical factors\n# factor_raster &lt;- cut(values(final_raster), breaks = breaks, labels = labels, include.lowest = TRUE)\n\n# change name\nnames(max_temp_reclassified_aiquile) &lt;- \"Drought Risk\"\n\n# Color Palette in R\ncolors &lt;- c(\"darkgreen\",\"yellow\", \"orange\",\"red\")\n\n# view\ntmap_mode(\"plot\")\n\ntm_shape(all_municipalities) +\n  tm_polygons() +\ntm_shape(max_temp_reclassified_aiquile) +\n  tm_raster(palette = colors) + \ntm_shape(max_temp_reclassified_pasorapa) +\n  tm_raster(legend.show = FALSE, palette = colors) +  \ntm_shape(max_temp_reclassified_pojo) +\n  tm_raster(legend.show = FALSE, palette = colors) +  \ntm_shape(max_temp_reclassified_totora) +\n  tm_raster(legend.show = FALSE, palette = colors) +  \ntm_shape(all_municipalities) +\n    tm_borders(lwd = 2, col = \"black\") +\n    tm_layout(frame = FALSE) +\n  tm_text(\"NAME_3\", size = 0.7) +\n    tm_scale_bar(breaks = c(0, 5, 10), text.size = 0.9, position = c(\"left\")) +  \n  tm_compass(type = \"4star\", size = 6, position = c(\"right\", \"top\")) +\n  tm_credits(\"Author: Johannes Quente\", fontface = \"italic\", align = \"right\") +\n  tm_graticules(alpha = 0.3) +\n  tm_layout(\n    legend.text.size = 1,\n    legend.position = c(\"left\", \"bottom\"),\n    legend.outside = TRUE\n  )\n\n\n\n\n\nFigure 1.3: Maximum temperature reclassification\n\n\n\n\n\n\n\n1.2.3 DEM (Inclination) Data\nThe provided Digital Elevation Model (DEM) consists of raster values showcasing variations in altitudes. These altitude values where converted into slope data using the terra::terrain -function from the Terra package. The reclassification has been calculated according to Table 1.2.\nSubsequently, the slope data was categorized into varying degrees of possibility of drought in percent based on their inclination. For a detailed view of the reclassification code, please refer to the Appendix.\n\n\nCode\nlibrary(rayshader)\nlibrary(rgl)\n\n# Convert raster to matrix\nraster_matrix &lt;- raster_to_matrix(dem_mask_pasorapa)\n\n# writeRaster(dem_mask_pasorapa, \"dem_mask_pasorapa_test.tif\")\n\nraster_matrix %&gt;%\n  sphere_shade(texture = \"desert\") %&gt;%\n  plot_map()\n\n\nraster_matrix %&gt;%\n  sphere_shade(texture = \"desert\") %&gt;%\n  add_shadow(ray_shade(raster_matrix, zscale = 3), 0.5) %&gt;%\n  add_shadow(ambient_shade(raster_matrix), 0) %&gt;%\n  plot_3d(raster_matrix, zscale = 10, fov = 0, theta = 135, zoom = 0.75, phi = 45, windowsize = c(1000, 800))\nSys.sleep(0.2)\nrender_snapshot()\n\n\n\n\nCode\n# DEM\n##  crop and mask dem\ndem_crop &lt;- terra::crop(dem, Pasorapa)\ndem_mask_pasorapa &lt;- mask(dem_crop, Pasorapa)\n\nterrain_pasorapa &lt;- terrain(dem_mask_pasorapa)\n\n# Create a tibble with the reclassification table\nreclass_table_dem &lt;- tribble(\n  ~from, ~to, ~becomes,\n  0, 10, 0.09,           # 0-10: Plano\n  10, 20, 0.2,           # 10-20: Mod. inclinado\n  20, 30, 0.34,          # 20-30: Inclinado\n  30, 45, 0.56,          # 30-45: Mod. empinado\n  45, Inf, 1             # 45 and above: Fuert. empinado\n)\n\n# Assuming you have a slope raster 'slope_raster'\n# Reclassify the slope raster based on the reclassification table\ndem_reclassified_pasorapa &lt;- classify(terrain_pasorapa, reclass_table_dem, include.lowest = TRUE, right = TRUE)\n\n# Adding a new column C to the data frame\nreclass_table_dem$Class &lt;- c(\"Plano a casi plano\", \"Mod. inclinado\", \"Inclinado\", \"Mod. empinado\", \"Fuert. empinado\")\n\n# kable(reclass_table_dem)\n\n### Pasorapa\n### Aiquile\n\n# DEM\n##  crop and mask dem\ndem_crop &lt;- terra::crop(dem, Aiquile)\ndem_mask_aiquile &lt;- mask(dem_crop, Aiquile)\n\nterrain_aiquile &lt;- terrain(dem_mask_aiquile)\n\n# Create a tibble with the reclassification table\nreclass_table_dem &lt;- tribble(\n  ~from, ~to, ~becomes,\n  0, 10, 0.09,           # 0-10: Plano\n  10, 20, 0.2,           # 10-20: Mod. inclinado\n  20, 30, 0.34,          # 20-30: Inclinado\n  30, 45, 0.56,          # 30-45: Mod. empinado\n  45, Inf, 1             # 45 and above: Fuert. empinado\n)\n\n# Assuming you have a slope raster 'slope_raster'\n# Reclassify the slope raster based on the reclassification table\ndem_reclassified_aiquile &lt;- classify(terrain_aiquile, reclass_table_dem, include.lowest = TRUE, right = TRUE)\n\n# Adding a new column C to the data frame\nreclass_table_dem$Class &lt;- c(\"Plano a casi plano\", \"Mod. inclinado\", \"Inclinado\", \"Mod. empinado\", \"Fuert. empinado\")\n\n\n\n\nCode\n# Totora\n# saveRDS(dem_reclassified_pasorapa, \"dem_reclassified_pasorapa.rds\")\ndem_reclassified_pasorapa &lt;- readRDS(\"dem_reclassified_pasorapa.rds\")\n\n# Aiquile\n# saveRDS(dem_reclassified_aiquile, \"dem_reclassified_aiquile.rds\")\ndem_reclassified_aiquile &lt;- readRDS(\"dem_reclassified_aiquile.rds\")\n\n# Totora\ndem_reclassified_totora &lt;- readRDS(\"dem_reclassified_totora.rds\")\n\n# Pojo\ndem_reclassified_pojo &lt;- readRDS(\"dem_reclassified_pojo.rds\")\n\n\n\n\nCode\n# Define breaks and labels for the reclassification\nbreaks &lt;- c(0, 0.09, 0.2, 0.34, 0.59, 1)\n# labels &lt;- c(\"Muy bajo\", \"Bajo\", \"Moderado\", \"Alto\", \"Muy alto\")\n\n# Cut the raster values into categorical factors\n# factor_raster &lt;- cut(values(final_raster), breaks = breaks, labels = labels, include.lowest = TRUE)\n\n# change name\nnames(dem_reclassified_aiquile) &lt;- \"Drought Risk\"\n\n# Color Palette in R\n# colors &lt;- c(\"darkgreen\",\"yellow\", \"orange\",\"red\")\n\n# view\ntmap_mode(\"plot\")\n\ntm_shape(all_municipalities) +\n  tm_polygons() +\ntm_shape(dem_reclassified_aiquile) +\n  tm_raster(palette = colors) + \ntm_shape(dem_reclassified_pasorapa) +\n  tm_raster(legend.show = FALSE, palette = colors) +  \ntm_shape(dem_reclassified_pojo) +\n  tm_raster(legend.show = FALSE, palette = colors) +  \ntm_shape(dem_reclassified_totora) +\n  tm_raster(legend.show = FALSE, palette = colors) +  \ntm_shape(all_municipalities) +\n    tm_borders(lwd = 2, col = \"black\") +\n    tm_layout(frame = FALSE) +\n  tm_text(\"NAME_3\", size = 0.7) +\n    tm_scale_bar(breaks = c(0, 5, 10), text.size = 0.9, position = c(\"left\")) +  \n  tm_compass(type = \"4star\", size = 6, position = c(\"right\", \"top\")) +\n  tm_credits(\"Author: Johannes Quente\", fontface = \"italic\", align = \"right\") +\n  tm_graticules(alpha = 0.3) +\n  tm_layout(\n    legend.text.size = 1,\n    legend.position = c(\"left\", \"bottom\"),\n    legend.outside = TRUE\n  )\n\n\n\n\n\nFigure 1.4: DEM derived Inclination reclassification\n\n\n\n\n\n\n\n1.2.4 DEM (Perspective) Data\nThe provided Digital Elevation Model (DEM) consists of raster values showcasing variations in altitudes. These altitude values where converted into perspective data, therefore each pixel now showing the degree in which the groundstructure faces (0-360 degrees) using the terra::terrain(\"aspect\") -function from the Terra package. The reclassification has been calculated according to Table 1.2.\nSubsequently the slope data was categorized into varying degrees of possibility of drought (in %) based on their positioning due to facing the sun during the day. For further review of the reclassification code, please refer to the Appendix.\n\n\nCode\n### terrain::aspect Pasorapa & Aiquile\naspect_pasorapa &lt;- terrain(dem_mask_pasorapa, \"aspect\")\naspect_aiquile  &lt;- terrain(dem_mask_aiquile, \"aspect\")\n\n# writeRaster(aspect_pasorapa, \"aspect_pasorapa.tif\")\n# writeRaster(aspect_aiquile, \"aspect_aiquile.tif\")\n\n\n# reclass\n# Create a tibble with the reclassification table\nreclass_table_aspect &lt;- tribble(\n  ~from, ~to, ~becomes,\n  -Inf, 45, 0,\n  45, 135, 0.25,\n  135, 225, 1,\n  225, 315, 0.25,\n  315, Inf, 0\n)\n\n# Pasorapa: Reclassify the slope raster based on the reclassification table\naspect_reclassified_aiquile &lt;- terra::classify(aspect_aiquile, reclass_table_aspect, include.lowest = TRUE, right = TRUE)\n\n# Aiquile: Reclassify the slope raster based on the reclassification table\naspect_reclassified_pasorapa &lt;- terra::classify(aspect_pasorapa, reclass_table_aspect, include.lowest = TRUE, right = TRUE)\n\n\n\n?(caption)\n\n\n\n\n\nCode\n# write rds\n# saveRDS(aspect_reclassified_aiquile, \"aspect_reclassified_aiquile.rds\")\n# saveRDS(aspect_reclassified_pasorapa, \"aspect_reclassified_pasorapa.rds\")\n\n# read rds\naspect_reclassified_aiquile  &lt;- readRDS(\"aspect_reclassified_aiquile.rds\")\naspect_reclassified_pasorapa &lt;- readRDS(\"aspect_reclassified_pasorapa.rds\")\n\n# read other data\naspect_reclassified_pojo   &lt;- readRDS(\"aspect_reclassified_pojo.rds\")\naspect_reclassified_totora &lt;- readRDS(\"aspect_reclassified_totora.rds\")\n\n# kable(reclass_table_aspect)\n\n\n\n\nCode\n# change name\nnames(aspect_reclassified_aiquile) &lt;- \"Drought Risk\"\n\ntm_shape(all_municipalities) +\n  tm_polygons() +\ntm_shape(aspect_reclassified_aiquile) +\n  tm_raster(palette = colors) + \ntm_shape(aspect_reclassified_pasorapa) +\n  tm_raster(legend.show = FALSE, palette = colors) +  \ntm_shape(aspect_reclassified_pojo) +\n  tm_raster(legend.show = FALSE, palette = colors) +  \ntm_shape(aspect_reclassified_totora) +\n  tm_raster(legend.show = FALSE, palette = colors) +  \ntm_shape(all_municipalities) +\n    tm_borders(lwd = 2, col = \"black\") +\n    tm_layout(frame = FALSE) +\n  tm_text(\"NAME_3\", size = 0.7) +\n    tm_scale_bar(breaks = c(0, 5, 10), text.size = 0.9, position = c(\"left\")) +  \n  tm_compass(type = \"4star\", size = 6, position = c(\"right\", \"top\")) +\n  tm_credits(\"Author: Johannes Quente\", fontface = \"italic\", align = \"right\") +\n  tm_graticules(alpha = 0.3) +\n  tm_layout(\n    legend.text.size = 1,\n    legend.position = c(\"left\", \"bottom\"),\n    legend.outside = TRUE\n  )\n\n\n\n\n\nFigure 1.5: DEM derived Perspective reclassification\n\n\n\n\n\n\n\n1.2.5 Precipitation Data\nThe following Data provided by Fick and Hijmans (2017) resembles Precipitation Data on a 30 Arc Second Accuracy. The format provides one Raster-Layer for each month.\nTwelve raster layers have been aggregated to generate a unified raster layer, facilitating subsequent classification. The outcome is a comprehensive raster layer encompassing the total precipitation for the average year spanning from 1970 to 2000. The utilized code is available in the Appendix In the reclassification process, values were partitioned into five equally distributed groups based on frequency, with each group representing 20% of the total data frequency. The distribution and grouping methodology are illustrated in Figure 1.6. The reclassification has been calculated according to Table 1.2.\n\n\nCode\nprecip_pasorapa &lt;- rast(\"sum_raster_pasorapa.tif\")\nprecip_aiquile  &lt;- rast(\"sum_raster.tif\")\n\nprecip_pojo     &lt;- rast(\"precip_pojo.tif\")\nprecip_totora   &lt;- rast(\"precip_totora.tif\")\n\nprecip_todos    &lt;- rast(\"precip_todos.tif\")\n\n# Reclass\n# Create a tibble with the reclassification table\nreclass_table_precip &lt;- tribble(\n  ~from, ~to, ~becomes,\n  1058.2, Inf,     0,     \n  640,    1058.2,  0.25,  \n  571,    640,     0.5,   \n  513.8,  571,     0.75,  \n  -Inf,   513.8,   1      \n)\n\n# Reclassify the slope raster based on the reclassification table\nprecip_reclassified_pasorapa &lt;- terra::classify(precip_pasorapa, reclass_table_precip, include.lowest = TRUE, right = TRUE)\n\nprecip_reclassified_aiquile &lt;- terra::classify(precip_aiquile, reclass_table_precip, include.lowest = TRUE, right = TRUE)\n\nprecip_reclassified_pojo &lt;- terra::classify(precip_pojo, reclass_table_precip, include.lowest = TRUE, right = TRUE)\n\nprecip_reclassified_totora &lt;- terra::classify(precip_totora, reclass_table_precip, include.lowest = TRUE, right = TRUE)\n\n# todos\nprecip_reclassified_todos &lt;- terra::classify(precip_todos, reclass_table_precip, include.lowest = TRUE, right = TRUE)\n\n# table\n# kable(reclass_table_precip)\n\n\n\n?(caption)\n\n\n\n\n\nCode\n# Specify the number of breaks (bins)\nnum_breaks &lt;- 5\n\nbreak_values &lt;- quantile(values(precip_todos, na.rm = TRUE), probs = seq(0, 1, length.out = num_breaks + 1))\n\n# Create the histogram with equal-frequency breaks\nhist(values(precip_todos), breaks = \"FD\", main = \"Histogram of Data Distribution\", xlab = \"Drought Risk Values\", col = \"skyblue\", border = \"black\", plot = TRUE)\n\n# Add vertical lines to represent the breaks\nabline(v = quantile(values(precip_todos, na.rm = TRUE), probs = seq(0, 1, length.out = num_breaks + 1)), col = \"red\", lty = 2)\n\n\n\n\n\nFigure 1.6: Distribution of the Precipitation Data\n\n\n\n\n\n\nCode\n# change name\nnames(precip_reclassified_todos) &lt;- \"Drought Risk\"\n\ntm_shape(all_municipalities) +\n  tm_polygons() +\ntm_shape(precip_reclassified_todos) +\n  tm_raster(palette = colors) + \ntm_shape(all_municipalities) +\n    tm_borders(lwd = 2, col = \"black\") +\n    tm_layout(frame = FALSE) +\n  tm_text(\"NAME_3\", size = 0.7) +\n    tm_scale_bar(breaks = c(0, 5, 10), text.size = 0.9, position = c(\"left\")) +  \n  tm_compass(type = \"4star\", size = 6, position = c(\"right\", \"top\")) +\n  tm_credits(\"Author: Johannes Quente\", fontface = \"italic\", align = \"right\") +\n  tm_graticules(alpha = 0.3) +\n  tm_layout(\n    legend.text.size = 1,\n    legend.position = c(\"left\", \"bottom\"),\n    legend.outside = TRUE\n  )\n\n\n\n\n\nFigure 1.7: Reclassification Result of the Precipitation Data"
  },
  {
    "objectID": "Drought_Risk.html#results-drought-risk-modeling",
    "href": "Drought_Risk.html#results-drought-risk-modeling",
    "title": "1  Drought Risk",
    "section": "1.3 Results Drought Risk Modeling",
    "text": "1.3 Results Drought Risk Modeling\nIn this chapter the Results of the Drought Risk Modeling are being presented: Figure 1.8 provides a visual representation of the data distribution, offering transparent insight into the significance of the reclassification values.\nFurther Figure 1.9 showcases the Drought Risk Map results for the four municipalities, aiding in understanding the spatial distribution of drought risk. In Figure 1.10 displays the data values across the four municipalities using Histograms, categorized into five equally distributed classes: “Very Low”, “Low”, “Moderate”, “High”, and “Very High”.\nA ratio scale-based risk mapping has been used to evenly distribute the data produced during the analysis. The Figure 1.11 presents the results with data values equally distributed across the four municipalities, providing a comprehensive overview of drought risk levels.\n\n\nCode\n### Totora\n\n# Align resolutions \nriver_reclassified &lt;- terra::resample(river_totora, dem_reclassified_totora)\n\naspect_reclassified &lt;- terra::resample(aspect_reclassified_totora, river_reclassified)\n\nmax_temp_reclassified &lt;- terra::resample(max_temp_reclassified_totora, aspect_reclassified)\n\nprecip_reclassified &lt;- terra::resample(precip_reclassified_totora, max_temp_reclassified)\n\ndem_reclassified &lt;- terra::resample(dem_reclassified_totora, precip_reclassified)\n\n# Adjusted weights\nweight_temp_max    &lt;- 0.2\nweight_perspektive &lt;- 0.15\nweight_dem         &lt;- 0.15\nweight_river_dist  &lt;- 0.2\nweight_precip      &lt;- 0.3\n\n# Perform the adjusted weighted combination\nfinal_raster &lt;- weight_temp_max      * max_temp_reclassified +\n                weight_perspektive   * aspect_reclassified +\n                weight_dem           * dem_reclassified +\n                weight_river_dist    * river_reclassified +\n                weight_precip        * precip_reclassified\n\nfinal_raster_totora &lt;- final_raster\n\n# Define the weights and data\nweights &lt;- c(0.2, 0.1, 0.1, 0.1, 0.2, 0.3)\ndata_names &lt;- c(\"Max temp\", \"Perspektive\", \"Land Use\", \"DEM\", \"River Data\", \"Precipitation\")\n\n# Create the table\ntable_data &lt;- data.frame(Weight = weights, Data = data_names)\n\n\n\n\nCode\n# 0%        20%        40%        60%        80%       100% \n# 0.05683258 0.26250001 0.30620000 0.35955495 0.42100001 0.69281250 \n\n# Define breaks and labels for the reclassification\nbreaks &lt;- c(0.05683258, 0.26250001, 0.3062, 0.35955495, 0.42100001, 0.69281250)\nlabels &lt;- c(\"Muy bajo\", \"Bajo\", \"Moderado\", \"Alto\", \"Muy alto\")\n\n# Cut the raster values into categorical factors\nfactor_raster &lt;- cut(values(final_raster_totora), breaks = breaks, labels = labels, include.lowest = TRUE)\n\n# change name\nnames(final_raster_totora) &lt;- \"Drought Risk\"\n\n# Create a new raster with categorized values\nr_categorized         &lt;- final_raster_totora\nvalues(r_categorized) &lt;- as.factor(factor_raster)\n\nr_categorized_totora &lt;- r_categorized\n\n\n\n\nCode\n### Pojo\n# Align resolutions \nriver_reclassified &lt;- terra::resample(river_pojo, dem_reclassified_pojo)\n\naspect_reclassified &lt;- terra::resample(aspect_reclassified_pojo, river_reclassified)\n\nmax_temp_reclassified &lt;- terra::resample(max_temp_reclassified_pojo, aspect_reclassified)\n\nprecip_reclassified &lt;- terra::resample(precip_reclassified_pojo, max_temp_reclassified)\n\ndem_reclassified &lt;- terra::resample(dem_reclassified_pojo, precip_reclassified)\n\n\n# Perform the adjusted weighted combination\nfinal_raster &lt;- weight_temp_max      * max_temp_reclassified +\n                weight_perspektive   * aspect_reclassified +\n                weight_dem           * dem_reclassified +\n                weight_river_dist    * river_reclassified +\n                weight_precip        * precip_reclassified\n\nfinal_raster_pojo &lt;- final_raster\n# plot(final_raster)\n\n# Define the weights and data\nweights &lt;- c(0.2, 0.1, 0.1, 0.1, 0.2, 0.3)\ndata_names &lt;- c(\"Max temp\", \"Perspektive\", \"Land Use\", \"DEM\", \"River Data\", \"Precipitation\")\n\n# Create the table\ntable_data &lt;- data.frame(Weight = weights, Data = data_names)\n\n\n\n\nCode\n#         0%        20%        40%        60%        80%       100% \n# 0.07236859 0.26130000 0.30203100 0.34262143 0.40750000 0.65400001 \n\n# Define breaks and labels for the reclassification\nbreaks &lt;- c(0.07236859, 0.2613, 0.302031, 0.34262143, 0.4075, 0.65400001)\nlabels &lt;- c(\"Muy bajo\", \"Bajo\", \"Moderado\", \"Alto\", \"Muy alto\")\n\n# Cut the raster values into categorical factors\nfactor_raster &lt;- cut(values(final_raster), breaks = breaks, labels = labels, include.lowest = TRUE)\n\n# change name\nnames(final_raster) &lt;- \"Drought Risk\"\n\n# Create a new raster with categorized values\nr_categorized         &lt;- final_raster\nvalues(r_categorized) &lt;- as.factor(factor_raster)\n\nr_categorized_pojo &lt;- r_categorized\n\n\n\n\nCode\n### Pasorapa\n\n# Align resolutions \nriver_reclassified &lt;- terra::resample(river_reclassified_pasorapa, dem_reclassified_pasorapa)\n\naspect_reclassified &lt;- terra::resample(aspect_reclassified_pasorapa, river_reclassified)\n\nmax_temp_reclassified &lt;- terra::resample(max_temp_reclassified_pasorapa, aspect_reclassified)\n\nprecip_reclassified &lt;- terra::resample(precip_reclassified_pasorapa, max_temp_reclassified)\n\ndem_reclassified &lt;- terra::resample(dem_reclassified_pasorapa, precip_reclassified)\n\n# Ponderación de criterios segun: ELABORACION DEL MAPA DE RIESGO A SEQUIAS\n\n# ((( [V_ATsqia_1] *0.75) + ( [V_PL_sqia] *0.25)) * 0.40) + ((( [V_uso_sqia] *0.52) + ( [V_dens] *0.16) +( [V_DR_sqia] *0.14) + ( [V_slp_sqia] *0.1) + ( [V_Orie_sqi] *0.08)) *0.60)\n\n# Perform the adjusted weighted combination\nfinal_raster &lt;- weight_temp_max      * max_temp_reclassified +\n                weight_perspektive   * aspect_reclassified +\n                weight_dem           * dem_reclassified +\n                weight_river_dist    * river_reclassified +\n                weight_precip        * precip_reclassified\n\nfinal_raster_pasorapa &lt;- final_raster\n\n# Define the weights and data\nweights &lt;- c(0.2, 0.1, 0.1, 0.1, 0.2, 0.3)\ndata_names &lt;- c(\"Max temp\", \"Perspektive\", \"Land Use\", \"DEM\", \"River Data\", \"Precipitation\")\n\n# Create the table\ntable_data &lt;- data.frame(Weight = weights, Data = data_names)\n\n\n\n\nCode\n#        0%       20%       40%       60%       80%      100% \n# 0.2885000 0.4974375 0.5435000 0.5865875 0.6375000 0.8966000 \n\n# Define breaks and labels for the reclassification\nbreaks &lt;- c(0.2885, 0.4974375, 0.5435, 0.5865875, 0.6375, 0.8966)\nlabels &lt;- c(\"Muy bajo\", \"Bajo\", \"Moderado\", \"Alto\", \"Muy alto\")\n\n# Cut the raster values into categorical factors\nfactor_raster &lt;- cut(values(final_raster), breaks = breaks, labels = labels, include.lowest = TRUE)\n\n# change name\nnames(final_raster) &lt;- \"Drought Risk\"\n\n# Create a new raster with categorized values\nr_categorized         &lt;- final_raster\nvalues(r_categorized) &lt;- as.factor(factor_raster)\n\nr_categorized_pasorapa &lt;- r_categorized\n\n\n\n\nCode\n### Aiquile\n\n# Align resolutions (resample geo)\nriver_reclassified &lt;- terra::resample(river_reclassified_aiquile, dem_reclassified_aiquile)\n\n# Align resolutions (resample geo)\naspect_reclassified &lt;- terra::resample(aspect_reclassified_aiquile, river_reclassified)\n\n# Align resolutions (resample geo)\nmax_temp_reclassified &lt;- terra::resample(max_temp_reclassified_aiquile, aspect_reclassified)\n\n# Align resolutions (resample geo)\nprecip_reclassified &lt;- terra::resample(precip_reclassified_aiquile, max_temp_reclassified)\n\ndem_reclassified &lt;- terra::resample(dem_reclassified_aiquile, precip_reclassified)\n\n\n# Perform the adjusted weighted combination\nfinal_raster &lt;- weight_temp_max      * max_temp_reclassified +\n                weight_perspektive   * aspect_reclassified +\n                weight_dem           * dem_reclassified +\n                weight_river_dist    * river_reclassified +\n                weight_precip        * precip_reclassified\n\nfinal_raster_aiquile &lt;- final_raster\n\n# Define the weights and data\nweights &lt;- c(0.2, 0.15, 0.15, 0.2, 0.3)\ndata_names &lt;- c(\"Max temp\", \"Perspektive\", \"DEM\", \"River Data\", \"Precipitation\")\n\n# Create the table\ntable_data &lt;- data.frame(Weight = weights, Data = data_names)\n\n# Show the table\n# kable(table_data)\n\n\n\n\nCode\n#        0%       20%       40%       60%       80%      100% \n# 0.2085000 0.4322500 0.4763125 0.5184375 0.5797500 0.8700000 \n\n# Define breaks and labels for the reclassification\nbreaks &lt;- c(0.2085, 0.43225, 0.4763125, 0.5184375, 0.57975, 0.87)\nlabels &lt;- c(\"Muy bajo\", \"Bajo\", \"Moderado\", \"Alto\", \"Muy alto\")\n\n# Cut the raster values into categorical factors\nfactor_raster &lt;- cut(values(final_raster), breaks = breaks, labels = labels, include.lowest = TRUE)\n\n# change name\nnames(final_raster) &lt;- \"Drought Risk\"\n\n# Create a new raster with categorized values\nr_categorized         &lt;- final_raster\nvalues(r_categorized) &lt;- as.factor(factor_raster)\n\nr_categorized_aiquile &lt;- r_categorized\n\n\n\n\nCode\n# Define the municipalities\nmunicipalities &lt;- c(\"pojo\", \"pasorapa\", \"aiquile\", \"totora\")\n\n# Set the number of breaks (bins)\nnum_breaks &lt;- 5\n\n# Loop over each municipality\nfor (municipality in municipalities) {\n  # Get the final raster data for the current municipality\n  final_raster &lt;- switch(municipality,\n                         pojo = final_raster_pojo,\n                         pasorapa = final_raster_pasorapa,\n                         aiquile = final_raster_aiquile,\n                         totora = final_raster_totora)\n  \n    # Check if final_raster is NULL\n  # if (is.null(final_raster)) {\n  #   cat(\"Error: Final raster data is NULL for\", municipality, \"\\n\")\n  # } else {\n    \n    # Compute the break values\n    break_values &lt;- quantile(values(final_raster, na.rm = TRUE), probs = seq(0, 1, length.out = num_breaks + 1))\n    \n    # Capitalize the first letter of the municipality name\n    capitalized_municipality &lt;- str_to_title(municipality)\n    \n    # Create the histogram with equal-frequency breaks\n  hist(values(final_raster), breaks = \"FD\", main = paste(\"Histogram of Drought Risk for\", capitalized_municipality), xlab = \"Drought Risk Values\", col = \"skyblue\", border = \"black\", plot = TRUE)\n    \n    # Add vertical lines to represent the breaks\n    abline(v = break_values, col = \"red\", lty = 2)\n}\n\n\n\n\n\n\n\n\n(a) Distribution of Pojo\n\n\n\n\n\n\n\n(b) Distribution of Pasorapa\n\n\n\n\n\n\n\n\n\n(c) Distribution of Aiquile\n\n\n\n\n\n\n\n(d) Distribution of Totora\n\n\n\n\nFigure 1.8: Data Distribution of the four Municipalities\n\n\n\n\n\nCode\n# change name\nnames(precip_reclassified_todos) &lt;- \"Drought Risk\"\n\ntm_shape(all_municipalities) +\n  tm_polygons() +\ntm_shape(r_categorized_totora) +\n  tm_raster(palette = colors) +  \ntm_shape(r_categorized_pojo) +\n  tm_raster(legend.show = FALSE, palette = colors) +  \ntm_shape(r_categorized_aiquile) +\n  tm_raster(legend.show = FALSE, palette = colors) +  \ntm_shape(r_categorized_pasorapa) +\n  tm_raster(legend.show = FALSE, palette = colors) +  \n  tm_shape(all_municipalities) +\n    tm_borders(lwd = 2, col = \"black\") +\n    tm_layout(frame = FALSE) +\n  tm_text(\"NAME_3\", size = 0.7) +\n    tm_scale_bar(breaks = c(0, 5, 10), text.size = 0.9, position = c(\"left\")) +  \n  tm_compass(type = \"4star\", size = 6, position = c(\"right\", \"top\")) +\n  tm_credits(\"Author: Johannes Quente\", fontface = \"italic\", align = \"right\") +\n  tm_graticules(alpha = 0.3) +\n  tm_layout(\n    legend.text.size = 1,\n    legend.position = c(\"left\", \"bottom\"),\n    legend.outside = TRUE\n  )\n\n\n\n\n\nFigure 1.9: Result Drought Risk for each Municipality\n\n\n\n\n\n\n\nCode\n# Use terra::merge to combine the raster layers\nfinal_raster &lt;- terra::merge(final_raster_pojo, final_raster_pasorapa, final_raster_aiquile, final_raster_totora)\n\n# Specify the number of breaks (bins)\nnum_breaks &lt;- 5\n\nbreak_values &lt;- quantile(values(final_raster, na.rm = TRUE), probs = seq(0, 1, length.out = num_breaks + 1))\n\n# Extract numeric values\nnumeric_breaks &lt;- as.numeric(as.character(break_values))\n\n# Create the histogram with equal-frequency breaks\nhist(final_raster, breaks = \"FD\", main = \"Histogram of Drought Risk\", xlab = \"Drought Risk Values\", col = \"skyblue\", border = \"black\", plot = TRUE)\n\n# Add vertical lines at quantile positions\nabline(v = break_values, col = \"red\", lty = 2)\n\n\n\n\n\nFigure 1.10: Distribution of the final Data\n\n\n\n\n\n\nCode\n# Define breaks and labels for the reclassification\nbreaks &lt;- numeric_breaks\nlabels &lt;- c(\"Muy bajo\", \"Bajo\", \"Moderado\", \"Alto\", \"Muy alto\")\n\n# Cut the raster values into categorical factors\nfactor_raster &lt;- cut(values(final_raster), breaks = breaks, labels = labels, include.lowest = TRUE)\n\n# change name\nnames(final_raster) &lt;- \"Drought Risk\"\n\n# Create a new raster with categorized values\nr_categorized         &lt;- final_raster\nvalues(r_categorized) &lt;- as.factor(factor_raster)\n\n# view\ntmap_mode(\"plot\")\n\ntm_shape(r_categorized, labels = \"New Legend Label\") +\n  tm_raster(palette = colors) +  \n  tm_shape(all_municipalities) +\n    tm_borders(lwd = 2, col = \"black\") +\n    tm_layout(frame = FALSE) +\n  tm_text(\"NAME_3\", size = 0.7) +\n    tm_scale_bar(breaks = c(0, 5, 10), text.size = 0.9, position = c(\"left\")) +  \n  tm_compass(type = \"4star\", size = 6, position = c(\"right\", \"top\")) +\n  tm_credits(\"Author: Johannes Quente\", fontface = \"italic\", align = \"right\") +\n  tm_graticules(alpha = 0.3) +\n  tm_layout(\n    legend.text.size = 1,\n    legend.position = c(\"left\", \"bottom\"),\n    legend.outside = TRUE\n  )\n\n\n\n\n\nFigure 1.11: Result Drought Risk for 4 Municipalities"
  },
  {
    "objectID": "Drought_Risk.html#discussion",
    "href": "Drought_Risk.html#discussion",
    "title": "1  Drought Risk",
    "section": "1.4 Discussion",
    "text": "1.4 Discussion\nThis study aims to evaluate the risk of drought, flood, and frost and identify potential risk zones in the Valle Alto region of Cochabamba, including Aiquile, Pasorapa, Pojo, and Totoro.\nThe objective of this study is to provide evidence-based information to enhance the resilience of communities and ecosystems to hazards related to drought, flood, and frost. A ratio scale-based risk mapping has been identified as the most effective method to evenly distribute the data produced during the analysis.\nTo improve the precision of our models, it is crucial to evaluate this readjustment based on empirical insights and observations from the studied environments. By fine-tuning these weights, we can align our models more closely with the intricate realities of these ecosystems, potentially revealing details that may have been missed in previous analyses.\nIn proposing these customized weighting and reclassification parameters, my aim is to assist the scientific discourse by introducing a more precise perspective. This method offers a clearer view through which various dynamics of our natural environments can be examined, comprehended, and conveyed.\nWhile temperature is a standard indicator, its impact varies across different plant species, suggesting the need for a more comprehensive consideration of frost impacts beyond freezing temperatures (Condori et al. 2014).\nIn the future, by leveraging satellite imagery and tapping into local knowledge through field visits and workshops with stakeholders, there is potential to enhance the mapping of historically flood-prone areas significantly. This would involve evaluating the intensity of floods and delineating these zones to gain deeper insights into the frequency and impact of flooding. Such a comprehensive approach is crucial for effectively addressing the multifaceted challenges posed by these natural phenomena (Tanim et al. 2022)."
  },
  {
    "objectID": "Drought_Risk.html#conclusion",
    "href": "Drought_Risk.html#conclusion",
    "title": "1  Drought Risk",
    "section": "1.5 Conclusion",
    "text": "1.5 Conclusion\nThe objective of this study was to identify areas in the four Municipalities of the Cono Sur area of the State of Cochabamba that are susceptible to droughts, floods, and frosts.\nTo achieve this, various geospatial datasets were explored, including terrain attributes, geological features, and precipitation records. Each dataset was analyzed using predetermined weights to emphasize their relative importance in the study. During the Multicriteria Analysis, we integrated numerous Raster and Vector Layers using weighted factors.\nBy utilizing the R-Studio Environment and key packages crucial for these calculations the resultant raster (Figure 1.9 and Figure 1.11) provides a comprehensive representation of the region’s environmental aspects.\nThe methodology aims to identify areas that are at risk of severe impact from certain meteorological conditions. It supports local policymaking by utilizing an adaptable approach.\nThe risk potential is classified into five categories: ‘Very low’, ‘Low’, ‘Moderate’, ‘High’, and ‘Very High’, as shown on the map. To ensure a balanced visualization of the five risk categories, the resulting data has been equally partitioned into five equally distributed groups."
  },
  {
    "objectID": "Drought_Risk.html#appendix-maps",
    "href": "Drought_Risk.html#appendix-maps",
    "title": "1  Drought Risk",
    "section": "1.6 Appendix Maps",
    "text": "1.6 Appendix Maps\n\n\nCode\n# view\ntmap_mode(\"plot\")\n\ntm_shape(r_categorized_totora, labels = \"New Legend Label\") +\n  tm_raster(style = \"cont\", palette = colors, breaks = breaks) +  # Change style to \"cont\" or \"cat\"\n    tm_scale_bar(breaks = c(0, 5, 10), text.size = 0.9, position = c(\"left\")) +  \n  tm_compass(type = \"4star\", size = 6, position = c(\"right\", \"top\")) +\n  tm_credits(\"Author: Johannes Quente\", fontface = \"italic\", align = \"right\") +\n  tm_graticules(alpha = 0.3) +\n  tm_layout(\n    legend.text.size = 1,\n    legend.position = c(\"left\", \"bottom\"),\n    legend.outside = TRUE\n  )\n\n\n\n\n\nFigure 1.12: Reclassified and Weighted Result in Totora\n\n\n\n\n\n\nCode\ntm_shape(r_categorized_pojo, labels = \"New Legend Label\") +\n  tm_raster(style = \"cont\", palette = colors, breaks = breaks) +  # Change style to \"cont\" or \"cat\"\n    tm_scale_bar(breaks = c(0, 5, 10), text.size = 0.9, position = c(\"left\")) +  \n  tm_compass(type = \"4star\", size = 6, position = c(\"right\", \"top\")) +\n  tm_credits(\"Author: Johannes Quente\", fontface = \"italic\", align = \"right\") +\n  tm_graticules(alpha = 0.3) +\n  tm_layout(\n    legend.text.size = 1,\n    legend.position = c(\"left\", \"bottom\"),\n    legend.outside = TRUE\n  )\n\n\n\n\n\nFigure 1.13: Reclassified and Weighted Result in Pojo\n\n\n\n\n\n\nCode\ntm_shape(r_categorized_pasorapa, labels = \"New Legend Label\") +\n  tm_raster(style = \"cont\", palette = colors, breaks = breaks) +  # Change style to \"cont\" or \"cat\"\n    tm_scale_bar(breaks = c(0, 5, 10), text.size = 0.9, position = c(\"left\")) +  \n  tm_compass(type = \"4star\", size = 6, position = c(\"right\", \"top\")) +\n  tm_credits(\"Author: Johannes Quente\", fontface = \"italic\", align = \"right\") +\n  tm_graticules(alpha = 0.3) +\n  tm_layout(\n    legend.text.size = 1,\n    legend.position = c(\"left\", \"bottom\"),\n    legend.outside = TRUE\n  )\n\n\n\n\n\nFigure 1.14: Reclassified and Weighted Result in Pasorapa\n\n\n\n\n\n\nCode\ntm_shape(r_categorized_aiquile, labels = \"New Legend Label\") +\n  tm_raster(style = \"cont\", palette = colors, breaks = breaks) +  # Change style to \"cont\" or \"cat\"\n    tm_scale_bar(breaks = c(0, 5, 10), text.size = 0.9, position = c(\"left\")) +  \n  tm_compass(type = \"4star\", size = 6, position = c(\"right\", \"top\")) +\n  tm_credits(\"Author: Johannes Quente\", fontface = \"italic\", align = \"right\") +\n  tm_graticules(alpha = 0.3) +\n  tm_layout(\n    legend.text.size = 1,\n    legend.position = c(\"left\", \"bottom\"),\n    legend.outside = TRUE\n  )\n\n\n\n\n\nFigure 1.15: Reclassified and Weighted Result in Aiquile\n\n\n\n\n\n\n\n\n\n\nCondori, Bruno, Robert J. Hijmans, Jean Francois Ledent, and Roberto Quiroz. 2014. “Managing Potato Biodiversity to Cope with Frost Risk in the High Andes: A Modeling Perspective.” PLOS ONE 9 (January): e81510. https://doi.org/10.1371/JOURNAL.PONE.0081510.\n\n\nFick, Stephen E., and Robert J. Hijmans. 2017. “WorldClim 2: New 1km Spatial Resolution Climate Surfaces for Global Land Areas.” International Journal of Climatology 37 (12): 4302–15. https://www.worldclim.org/data/worldclim21.html.\n\n\nGao, Fengjie, Si Zhang, Rui Yu, Yafang Zhao, Yuxin Chen, and Ying Zhang. 2023. “Agricultural Drought Risk Assessment Based on a Comprehensive Model Using Geospatial Techniques in Songnen Plain, China.” Land 12 (June). https://doi.org/10.3390/land12061184.\n\n\nLinke, Simon, Bernhard Lehner, Cynthia Ouellet Dallaire, Joyce Ariwi, Günther Grill, Manu Anand, Paul Beames, et al. 2019. “Global Hydro-Environmental Sub-Basin and River Reach Characteristics at High Spatial Resolution.” Scientific Data 6: 283. https://doi.org/10.1038/s41597-019-0300-6.\n\n\nTanim, Ahad Hasan, Callum Blake McRae, Hassan Tavakol‐davani, and Erfan Goharian. 2022. “Flood Detection in Urban Areas Using Satellite Imagery and Machine Learning.” Water 2022, Vol. 14, Page 1140 14 (April): 1140. https://doi.org/10.3390/W14071140."
  },
  {
    "objectID": "Frost_Risk.html#sec-sec-frost",
    "href": "Frost_Risk.html#sec-sec-frost",
    "title": "2  Frost Risk",
    "section": "2.1 Frame of Reference",
    "text": "2.1 Frame of Reference\nFrost poses a perennial threat to agricultural activities, often resulting in crop damage and substantial economic losses, particularly exacerbated by the lack of comprehensive information on frost occurrences Kotikot and Onywere (2014). This study focuses on mapping potential frost hotspots within Cochabamba’s Valle Alto region, encompassing Aiquile, Pasorapa, Pojo, and Totoro.\nAssessing frost risk is crucial for agricultural hazard mapping and evaluating crop productivity in the Kenyan highlands. The adverse impacts of frost can be mitigated through systematic assessment of its occurrence probability, providing valuable insights to farmers and agricultural decision-makers.\nFrom an agricultural climatology perspective, frost occurrences are not solely determined by specific temperature thresholds; rather, certain plants are susceptible to damage even at temperatures above freezing point. For instance, tropical crops like coffee and cocoa can be adversely affected by temperatures above zero degrees Celsius.\nIn the Andean Region of Cochabamba, local stakeholders have identified frost as a persistent threat to crops and livestock, particularly prevalent during the winter season (June - September).\nConsequently, the creation of frost risk maps becomes imperative to aid decision-makers in territorial planning and disaster risk mitigation strategies. These maps were developed using a general risk equation approach, integrating factors such as threat and vulnerability through multicriteria evaluation techniques.\nFollowing the risk equation approach, understanding the risk level in different zones requires identifying threats and vulnerabilities. Thus, the initial phase involved crafting maps related to threats and vulnerabilities. These maps identified zones susceptible to frost events at various intensity levels, derived from public available data surces (see Table 2.1).\n\n\n\nCode\n# | Source | Description |\n# | ------ | ----------- |\n# | [Springer](https://link.springer.com/article/10.1007/BF00865525) | Methodology for frost risk mapping based on regional weather data and local terrain analysis. |\n# | [Kenya University](https://ir-library.ku.ac.ke/bitstream/handle/123456789/11619/Application%20of%20GIS%20and%20remote%20sensing%20techniques.pdf?sequence=4) | Application of GIS and remote sensing techniques for frost risk mapping in the Aberdare ecosystem, Kenya. |\n# | [CSIRO](https://www.csiro.au/en/work-with-us/industries/agriculture/Sustainable-food-and-agriculture-systems/Climate-mitigation-and-adaptation-in-agriculture/Frost-Modelling) | Frost modelling system providing same-day maps of sub-zero temperatures in paddocks. |\n# | [Springer](https://link.springer.com/chapter/10.1007/978-3-642-58132-8_5) | Methodology for frost risk mapping based on regional weather data and local terrain analysis. |Local frost risk maps are indispensable for land use planning, agricultural management, and interpreting regional frost warnings, vital for implementing effective frost protection techniques in farming. |\n\n\n\n\nCode\n# read libraries\nlibrary(raster)\nlibrary(terra)\nlibrary(ggplot2)\nlibrary(tmap)\nlibrary(sf)\nlibrary(dplyr)\nlibrary(tibble)\nlibrary(knitr)\nlibrary(stringr)\n\n\n\n\nCode\nbol   &lt;- read_sf(\"gadm41_BOL_3.shp\", crs = 4326)\ncocha &lt;- bol %&gt;% filter(NAME_1 == \"Cochabamba\")\n\nPasorapa &lt;- cocha %&gt;% filter(NAME_3 == \"Pasorapa\")\nAiquile  &lt;- cocha %&gt;% filter(NAME_3 == \"Aiquile\")\n\n# new\ntotora   &lt;- cocha %&gt;% filter(NAME_3 == \"Totora\")\npojo     &lt;- cocha %&gt;% filter(NAME_3 == \"Pojo\")\n\n# set extent\nall_municipalities &lt;- rbind(Pasorapa, Aiquile, totora, pojo)"
  },
  {
    "objectID": "Frost_Risk.html#methodology-of-the-case-study",
    "href": "Frost_Risk.html#methodology-of-the-case-study",
    "title": "2  Frost Risk",
    "section": "2.2 Methodology of the Case Study",
    "text": "2.2 Methodology of the Case Study\nThis Multicriteria Analysis employs numerous Raster and Vector Layers, integrating weighted factors. The entire project is conducted within the R-Studio Environment. Key packages utilized in achieving the final results are listed here R-Studio Libraries, delivering essential functions for the conducted calculations.\nTable 2.1 shows the data used in order to conduct the multicriteria analysis on the four municipalities in the Cono Sur Region in Cochabamba, Bolivia.\nTable 2.2 presents the classification and evaluation of various criteria for drought exposure, illustrating the factors influencing each classification. This table outlines the criteria and their corresponding classifications as follows.\nThe subsequent sections present the reclassified data for four municipalities in the state of Cochabamba. These sections detail the process of cleaning and further processing the raw data, with relevant code snippets linked to the Appendix for reference.\n\n\nCode\n# Creating a table\nshapes &lt;- c(\"Political Map\", \"Min. Temperature\", \"DEM (Perspective)\")\ndata_type &lt;- c(\"Vector\", \"Raster (30 s)\", \"Raster (15 s)\")\n\nsources &lt;- c(\n  \"[gadm.org](https://gadm.org/download_country.html)\",\n  \"@fick2017worldclim\", \n  \"[Hydrosheds.org](https://www.hydrosheds.org/hydrosheds-core-downloads)\")\n\nperiod &lt;- c(\"2024\", \"1970-2000\", \"2013\")\n\n# Repeat the sources based on the number of shapes\nrepeated_sources &lt;- rep(sources, length.out = length(shapes))\n\n# Create the data frame\ndata &lt;- data.frame(Data = shapes, Types = data_type, Source = repeated_sources, Period_Year = period)\n\ncolnames(data) &lt;- c(\"Data\", \"Types\", \"Source\", \"Period/Year\")\n\nkable(data)\n\n\n\n\nTable 2.1: Used Data in the Analysis\n\n\n\n\n\n\n\n\nData\nTypes\nSource\nPeriod/Year\n\n\n\n\nPolitical Map\nVector\ngadm.org\n2024\n\n\nMin. Temperature\nRaster (30 s)\nFick and Hijmans (2017)\n1970-2000\n\n\nDEM (Perspective)\nRaster (15 s)\nHydrosheds.org\n2013\n\n\n\n\n\n\n\n\nCode\n# Creating a sample data frame\ndata &lt;- data.frame(\n  Criteria = c(\"Minimum Temperature\", \"DEM (Perspective)\"),\n  `Very High` = c(\"&lt;5\", \"&lt;45°\"),\n  High = c(\"5-7\", \"45-135°\"),\n  Moderate = c(\"7-10\", \"135-225°\"),\n  Low = c(\"\", \"225-315°\"),\n  `Very Low` = c(\"&gt;10\", \"&gt;315°\"),\n  `Weights` = c(7.5, 2.5)\n)\n\n# Visualizing the table with kable\nkable(data, align = \"c\")\n\n\n\n\nTable 2.2: Classiﬁcation and evaluation of drought exposure according to factors\n\n\n\n\n\n\n\n\n\n\n\nCriteria\nVery.High\nHigh\nModerate\nLow\nVery.Low\nWeights\n\n\n\n\nMinimum Temperature\n&lt;5\n5-7\n7-10\n\n&gt;10\n7.5\n\n\nDEM (Perspective)\n&lt;45°\n45-135°\n135-225°\n225-315°\n&gt;315°\n2.5\n\n\n\n\n\n\n\n\nCode\n### Land Cover\n### Reclass\n\nraster_layer_with_new_extent &lt;- rast(\"raster_layer_with_new_extent.tif\")\n\n\n# reclass\n# Create a tibble with the reclassification table\nreclass_table_land &lt;- tribble(\n  ~from, ~to, ~becomes,\n  1, 1, 1,    \n  1, 2, 1,    \n  2, 3, 1,      \n  3, 4, 1,    \n  4, 5, 1,    \n  5, 6, 0,  \n  6, 7, 0,      \n  7, 8, 1,    \n  8, 9, 0,      \n  9, 10, 0,    \n  10, 11, 1\n)\n\n# Assuming you have a slope raster 'slope_raster'\n# Reclassify the slope raster based on the reclassification table\nland_reclassified &lt;- terra::classify(raster_layer_with_new_extent, reclass_table_land, include.lowest = TRUE, right = TRUE)\n\n# Align Vegetation-Raster\n# geo_reclassified &lt;- rast(geo_reclassified)\n\n# Adding a new column C to the data frame\nreclass_table_land$Class &lt;- c(\n  \"Productivo Agropecuario, Extractivo Forestal\",\n  \"Productivo Agropecuario: Pastoreo, en sectores Cultivos alimenticios\",\n  \"Productivo Ganadero: Escaso pastoreo directo\",\n  \"Productivo: Alimenticios de consumo, subsistencia y mercado local.\",\n  \"Productivo Ganadero: Pastoreo directo, forrajeo de aves.\",\n  \"Extractivo Minero en parte\",\n  \"Productivo Aguas Superficiales Mixto\",\n  \"Productivo Agropecuario: Cultivos alimenticios\",\n  \"Extractivo Minero, Productivo Agropecuario, Protectivo, Vida silvestre\",\n  \"Recreativo: Escénico, Turístico\",\n  \"Productivo Agropecuario, Extractivo Forestal y Petrolero\"\n)\n\nkable(reclass_table_land)\n\n\n\n?(caption)\n\n\n\n\n\nCode\n# check\ntmap_mode(\"plot\")\n\ntm_shape(land_reclassified, labels = \"New Legend Label\") +\n    tm_raster(style = \"cat\", palette = \"Reds\") +\n    tm_scale_bar(breaks = c(0, 5, 10), text.size = 0.9, position = c(\"left\")) +\n   tm_compass(type = \"4star\", size = 6, position = c(\"right\", \"top\")) +\n  tm_credits(\"Data source: geo.gob.bo\", fontface = \"italic\", align = \"right\") + tm_graticules(alpha = 0.3) +\n  tm_layout(\n    legend.text.size = 1,\n    legend.position = c(\"left\", \"bottom\"),\n    legend.outside = TRUE\n  )\n\n\n\n\n2.2.1 Minimum Temperature\nThe temperature dataset, provided by Fick and Hijmans (2017) encompasses a comprehensive collection of global weather data with a spatial resolution of 30 arc seconds. This dataset serves as the basis for computing the minimum temperatures across 12 raster layers corresponding to different months. The resultant output is a single raster layer representing the lowest temperatures averaged over the period from 1970 to 2000. Reclassification was performed according to a predefined scheme outlined in Table 2.2.\nThe following code exemplifies the automation of processing procedures across four municipalities. Refer to the Appendix for the specific code implementation: Appendix.\nFigure 2.1 illustrates the distribution of minimum temperature data through a histogram. This visualization supports the rationale behind reclassification into five equally distributed groups, each representing 20% of the total data frequency.\n\n\nCode\n# LOOP\n\n# Crear una lista con los nombres de los objetos\nlista_temp &lt;- paste0(\"tmin\", sprintf(\"%02d\", 1:12))  \n# Generate names precip01 until precip12\n\n# Inicializar una lista vacía para almacenar los resultados\nlista_tmin_mask &lt;- list()\n\n# Iterar sobre cada objeto y aplicar las operaciones\nfor (i in seq_along(lista_temp)) {\n  # Acceder al objeto con el nombre correspondiente\n  tmin_obj &lt;- get(lista_temp[i])\n  \n  # Aplicar las operaciones crop y mask\n  tmin_crop &lt;- terra::crop(tmin_obj, Aiquile)\n  tmin_mask &lt;- mask(tmin_crop, Aiquile)\n  \n  # Almacenar el resultado en la lista\n  lista_tmin_mask[[i]] &lt;- tmin_mask\n}\n\n# plot(lista_tmin_mask[[06]])\n\n\n# Stack the Values and calc the min for every values in the Rasterstack\n\n# Use rast() to convert the list to a SpatRaster object\nstacked_rasters &lt;- terra::rast(lista_tmin_mask)\n\n# Apply the cellStats function to find the minimum value for each pixel across the stack\nmin_values &lt;- terra::app(stacked_rasters, fun = min, na.rm = TRUE)\n\nplot(min_values)\n\n# saveRDS(min_values, file = \"min_temp_aiquile.rds\")\n\n\n\n\nCode\nmin_temp_pasorapa &lt;- readRDS(\"min_temp_pasorapa.rds\")\nmin_temp_pojo     &lt;- readRDS(\"min_temp_pojo.rds\")\nmin_temp_aiquile  &lt;- readRDS(\"min_temp_aiquile.rds\")\nmin_temp_totora   &lt;- readRDS(\"min_temp_totora.rds\")\n\n# Create a list of the SpatRaster objects\nraster_list &lt;- merge(min_temp_pasorapa, min_temp_pojo, min_temp_aiquile, min_temp_totora)\n\n# Specify the number of breaks (bins)\nnum_breaks &lt;- 5\n\nbreak_values &lt;- quantile(values(raster_list, na.rm = TRUE), probs = seq(0, 1, length.out = num_breaks + 1))\n\n# Extract numeric values\nnumeric_breaks &lt;- as.numeric(as.character(break_values))\n\n# Create the histogram with equal-frequency breaks\nhist(values(raster_list), breaks = \"FD\", main = \"Histogram of Data Distribution\", xlab = \"Minimum Temperature in °C\", col = \"skyblue\", border = \"black\", plot = TRUE)\n\n# Add vertical lines to represent the breaks\nabline(v = quantile(values(raster_list, na.rm = TRUE), probs = seq(0, 1, length.out = num_breaks + 1)), col = \"red\", lty = 2)\n\n\n\n\n\nFigure 2.1: Distribution of the Minimum Temperature Data\n\n\n\n\n\n\nCode\n# Temperature breaks for all municipalities\n\n# Define file names\nfile_names &lt;- c(\"min_temp_pasorapa.rds\", \"min_temp_pojo.rds\", \"min_temp_aiquile.rds\", \"min_temp_totora.rds\")\n\n# Initialize an empty list to store numeric breaks for each municipality\nnumeric_breaks_list &lt;- list()\n\n# Loop over each file name\nfor (file_name in file_names) {\n  # Read the raster file\n  raster_data &lt;- readRDS(file_name)\n  \n  # Calculate the numeric breaks\n  break_values &lt;- quantile(values(raster_data, na.rm = TRUE), probs = seq(0, 1, length.out = num_breaks + 1))\n  numeric_breaks &lt;- as.numeric(as.character(break_values))\n  \n  # Extract the municipality name from the file name\n  municipality &lt;- gsub(\".rds\", \"\", file_name)\n  \n  # Store the numeric breaks in the list with the municipality name as the key\n  numeric_breaks_list[[municipality]] &lt;- numeric_breaks\n}\n\n# Print the numeric breaks for each municipality\n# print(numeric_breaks_list)\n\n\n\n\nCode\n### Reclass\n# Create a tibble with the reclassification table\n\n#  0%  20%  40%  60%  80% 100%\n# -3.8  4.3  5.6  7.1  9.8 14.9\n\nreclass_table_min_temp &lt;- tribble(\n  ~from, ~to, ~becomes,\n  -3.8, 4.3, 1,    \n   4.3, 5.6, 0.8,   \n   5.6, 7.1, 0.4,   \n   7.1, 9.8, 0.2,\n   9.8, 14.9, 0\n)\n\n# Reclassify the slope raster based on the reclassification table\nmin_temp_pasorapa_reclassified &lt;- terra::classify(min_temp_pasorapa, reclass_table_min_temp, include.lowest = TRUE, right = TRUE)\n\nmin_temp_pojo_reclassified     &lt;- terra::classify(min_temp_pojo, reclass_table_min_temp, include.lowest = TRUE, right = TRUE)\n\nmin_temp_aiquile_reclassified  &lt;- terra::classify(min_temp_aiquile, reclass_table_min_temp, include.lowest = TRUE, right = TRUE)\n\nmin_temp_totora_reclassified   &lt;- terra::classify(min_temp_totora, reclass_table_min_temp, include.lowest = TRUE, right = TRUE)\n\n\n\n\nCode\n# Define breaks and labels for the reclassification\nbreaks &lt;- break_values\nlabels &lt;- c(\"Muy bajo\", \"Bajo\", \"Moderado\", \"Alto\", \"Muy alto\")\n\n# Cut the raster values into categorical factors\n# factor_raster &lt;- cut(values(final_raster), breaks = breaks, labels = labels, include.lowest = TRUE)\n\n# change name\nnames(min_temp_aiquile_reclassified) &lt;- \"Frost Risk\"\n\n# Color Palette in R\ncolors   &lt;- c(\"darkgreen\",\"lightgreen\",\"yellow\", \"orange\",\"red\")\n\n# view\ntmap_mode(\"plot\")\n\ntm_shape(all_municipalities) +\n  tm_polygons() +\ntm_shape(min_temp_aiquile_reclassified) +\n  tm_raster(palette = colors) + \ntm_shape(min_temp_pasorapa_reclassified) +\n  tm_raster(legend.show = FALSE, palette = colors) +  \ntm_shape(min_temp_pojo_reclassified) +\n  tm_raster(legend.show = FALSE, palette = colors) +  \ntm_shape(min_temp_totora_reclassified) +\n  tm_raster(legend.show = FALSE, palette = colors) +  \ntm_shape(all_municipalities) +\n    tm_borders(lwd = 2, col = \"black\") +\n    tm_layout(frame = FALSE) +\n  tm_text(\"NAME_3\", size = 0.7) +\n    tm_scale_bar(breaks = c(0, 5, 10), text.size = 0.9, position = c(\"left\")) +  \n  tm_compass(type = \"4star\", size = 6, position = c(\"right\", \"top\")) +\n  tm_credits(\"Author: Johannes Quente\", fontface = \"italic\", align = \"right\") +\n  tm_graticules(alpha = 0.3) +\n  tm_layout(\n    legend.text.size = 1,\n    legend.position = c(\"left\", \"bottom\"),\n    legend.outside = TRUE\n  )\n\n\n\n\n\nFigure 2.2: Reclassified Minimum Temperature\n\n\n\n\n\n\n\n2.2.2 DEM (Perspective)\nThe provided Digital Elevation Model (DEM) consists of raster values showcasing variations in altitudes. These altitude values where converted into perspective data, therefore each pixel now showing the degree in which the groundstructure faces (0-360 degrees) using the terra::terrain(\"aspect\") -function from the Terra package. The reclassification has been calculated according to Table 2.2.\nSubsequently the slope data was categorized into varying degrees of possibility of drought (in %) based on their positioning due to facing the sun during the day. For further review of the reclassification code, please refer to the Appendix.\n\n\nCode\n# read_data\naspect_pasorapa &lt;- rast(\"aspect_pasorapa.tif\")\naspect_aiquile  &lt;- rast(\"aspect_aiquile.tif\")\n\naspect_totora &lt;- rast(\"aspect_totora.tif\")\naspect_pojo   &lt;- rast(\"aspect_pojo.tif\")\n\n\n\n\nCode\n### Reclass\n\n# Create a tibble with the reclassification table\nreclass_table_aspect &lt;- tribble(\n  ~from, ~to, ~becomes,\n  -Inf, 45, 1,\n  45, 135, 0.25,\n  135, 225, 0,\n  225, 315, 0.25,\n  315, Inf, 1\n)\n\n# Reclassify the slope raster based on the reclassification table\naspect_pasorapa_reclassified &lt;- terra::classify(aspect_pasorapa, reclass_table_aspect, include.lowest = TRUE, right = TRUE)\n\naspect_aiquile_reclassified &lt;- terra::classify(aspect_aiquile, reclass_table_aspect, include.lowest = TRUE, right = TRUE)\n\naspect_totora_reclassified &lt;- terra::classify(aspect_totora, reclass_table_aspect, include.lowest = TRUE, right = TRUE)\n\naspect_pojo_reclassified &lt;- terra::classify(aspect_pojo, reclass_table_aspect, include.lowest = TRUE, right = TRUE)\n\n\n\n?(caption)\n\n\n\n\n\nCode\ncolors   &lt;- c(\"darkgreen\",\"lightgreen\",\"yellow\", \"orange\",\"red\")\n\n\n# change name\nnames(aspect_aiquile_reclassified) &lt;- \"Frost Risk\"\n\ntm_shape(all_municipalities) +\n  tm_polygons() +\ntm_shape(aspect_aiquile_reclassified) +\n  tm_raster(palette = colors) + \ntm_shape(aspect_pasorapa_reclassified) +\n  tm_raster(legend.show = FALSE, palette = colors) +  \ntm_shape(aspect_pojo_reclassified) +\n  tm_raster(legend.show = FALSE, palette = colors) +  \ntm_shape(aspect_totora_reclassified) +\n  tm_raster(legend.show = FALSE, palette = colors) +  \ntm_shape(all_municipalities) +\n    tm_borders(lwd = 2, col = \"black\") +\n    tm_layout(frame = FALSE) +\n  tm_text(\"NAME_3\", size = 0.7) +\n    tm_scale_bar(breaks = c(0, 5, 10), text.size = 0.9, position = c(\"left\")) +  \n  tm_compass(type = \"4star\", size = 6, position = c(\"right\", \"top\")) +\n  tm_credits(\"Author: Johannes Quente\", fontface = \"italic\", align = \"right\") +\n  tm_graticules(alpha = 0.3) +\n  tm_layout(\n    legend.text.size = 1,\n    legend.position = c(\"left\", \"bottom\"),\n    legend.outside = TRUE\n  )\n\n\n\n\n\nFigure 2.3: DEM derived Perspective reclassification"
  },
  {
    "objectID": "Frost_Risk.html#results-frost-risk",
    "href": "Frost_Risk.html#results-frost-risk",
    "title": "2  Frost Risk",
    "section": "2.3 Results Frost Risk",
    "text": "2.3 Results Frost Risk\n\n\nCode\n### Pasorapa\n\n# Resample aspect raster to match the extent and resolution of min_temp_pasorapa_reclassified\naspect_resampled &lt;- terra::resample(aspect_pasorapa_reclassified, min_temp_pasorapa_reclassified)\n\n# Adjusted weights\nweight_temp_min &lt;- 0.75\nweight_aspect   &lt;- 0.25\n\n# Perform the adjusted weighted combination\nfinal_raster &lt;- weight_temp_min * min_temp_pasorapa_reclassified +\n                weight_aspect   * aspect_resampled\n\nfinal_raster_pasorapa &lt;- final_raster\n\n### Pojo\n\n# Resample aspect raster to match the extent and resolution of min_temp_pasorapa_reclassified\naspect_resampled &lt;- terra::resample(aspect_pojo_reclassified, min_temp_pojo_reclassified)\n\n# Perform the adjusted weighted combination\nfinal_raster &lt;- weight_temp_min * min_temp_pojo_reclassified +\n                weight_aspect   * aspect_resampled\n\nfinal_raster_pojo &lt;- final_raster\n\n### Aiquile\n\n# Resample aspect raster to match the extent and resolution of min_temp_pasorapa_reclassified\naspect_resampled &lt;- terra::resample(aspect_aiquile_reclassified, min_temp_aiquile_reclassified)\n\n# Perform the adjusted weighted combination\nfinal_raster &lt;- weight_temp_min * min_temp_aiquile_reclassified +\n                weight_aspect   * aspect_resampled\n\nfinal_raster_aiquile &lt;- final_raster\n\n### Totora\n\n# Resample aspect raster to match the extent and resolution of min_temp_pasorapa_reclassified\naspect_resampled &lt;- terra::resample(aspect_totora_reclassified, min_temp_totora_reclassified)\n\n# Perform the adjusted weighted combination\nfinal_raster &lt;- weight_temp_min * min_temp_totora_reclassified +\n                weight_aspect   * aspect_resampled\n\nfinal_raster_totora &lt;- final_raster\n\n\n\n\nCode\n# Define the municipalities\nmunicipalities &lt;- c(\"pojo\", \"pasorapa\", \"aiquile\", \"totora\")\n\n# Set the number of breaks (bins)\nnum_breaks &lt;- 5\n\n# Initialize an empty list to store numeric breaks for each municipality\nnumeric_breaks_list &lt;- list()\n\n# Loop over each municipality\nfor (municipality in municipalities) {\n  # Get the final raster data for the current municipality\n  final_raster &lt;- switch(municipality,\n                         pojo = final_raster_pojo,\n                         pasorapa = final_raster_pasorapa,\n                         aiquile = final_raster_aiquile,\n                         totora = final_raster_totora)\n    \n    # Compute the break values\n    break_values &lt;- quantile(values(final_raster, na.rm = TRUE), probs = seq(0, 1, length.out = num_breaks + 1))\n    \n# Store the numeric breaks in the list\n  numeric_breaks_list[[municipality]] &lt;- as.numeric(as.character(break_values))\n    \n    # Capitalize the first letter of the municipality name\n    capitalized_municipality &lt;- str_to_title(municipality)\n    \n    # Create the histogram with equal-frequency breaks\n  hist(values(final_raster), breaks = 50, main = paste(\"Histogram of Frost Risk for\", capitalized_municipality), xlab = \"Frost Risk\", col = \"skyblue\", border = \"black\", plot = TRUE)\n    \n    # Add vertical lines to represent the breaks\n    abline(v = break_values, col = \"red\", lty = 2)\n}\n\n\n\n\n\n\n\n\n(a) Distribution of Pojo\n\n\n\n\n\n\n\n(b) Distribution of Pasorapa\n\n\n\n\n\n\n\n\n\n(c) Distribution of Aiquile\n\n\n\n\n\n\n\n(d) Distribution of Totora\n\n\n\n\nFigure 2.4: Data Distribution of the four Municipalities\n\n\n\n\n\nCode\n# Define breaks and labels for the reclassification\nbreaks_list &lt;- list(\n  pojo = numeric_breaks_list$pojo,\n  pasorapa = numeric_breaks_list$pasorapa,\n  aiquile = numeric_breaks_list$aiquile,\n  totora = numeric_breaks_list$totora\n)\n\nlabels &lt;- c(\"Muy bajo\", \"Bajo\", \"Moderado\", \"Alto\", \"Muy alto\")\n\n# Initialize an empty list to store categorized rasters for each municipality\ncategorized_rasters &lt;- list()\n\n# Loop over each municipality\nfor (municipality in municipalities) {\n  # Get the final raster data for the current municipality\n  final_raster &lt;- switch(municipality,\n                         pojo = final_raster_pojo,\n                         pasorapa = final_raster_pasorapa,\n                         aiquile = final_raster_aiquile,\n                         totora = final_raster_totora)\n  \n  # Define breaks for the current municipality\n  breaks &lt;- breaks_list[[municipality]]\n  \n  # Cut the raster values into categorical factors\n  factor_raster &lt;- cut(values(final_raster), breaks = breaks, labels = labels, include.lowest = TRUE)\n  \n  # Change the name of the raster\n  names(final_raster) &lt;- \"Frost Risk\"\n  \n  # Create a new raster with categorized values\n  r_categorized &lt;- final_raster\n  values(r_categorized) &lt;- as.factor(factor_raster)\n  \n  # Store the categorized raster in the list\n  categorized_rasters[[municipality]] &lt;- r_categorized\n}\n\n# Access categorized raster for a specific municipality\n# categorized_rasters$pasorapa\n\n\n\n\nCode\n# change name\nnames(categorized_rasters$pojo) &lt;- \"Frost Risk\"\n\ntm_shape(all_municipalities) +\n  tm_polygons() +\ntm_shape(categorized_rasters$pojo) +\n  tm_raster(palette = colors) +  \ntm_shape(categorized_rasters$pasorapa) +\n  tm_raster(legend.show = FALSE, palette = colors) +  \ntm_shape(categorized_rasters$aiquile) +\n  tm_raster(legend.show = FALSE, palette = colors) +  \ntm_shape(categorized_rasters$totora) +\n  tm_raster(legend.show = FALSE, palette = colors) +  \n  tm_shape(all_municipalities) +\n    tm_borders(lwd = 2, col = \"black\") +\n    tm_layout(frame = FALSE) +\n  tm_text(\"NAME_3\", size = 0.7) +\n    tm_scale_bar(breaks = c(0, 5, 10), text.size = 0.9, position = c(\"left\")) +  \n  tm_compass(type = \"4star\", size = 6, position = c(\"right\", \"top\")) +\n  tm_credits(\"Author: Johannes Quente\", fontface = \"italic\", align = \"right\") +\n  tm_graticules(alpha = 0.3) +\n  tm_layout(\n    legend.text.size = 1,\n    legend.position = c(\"left\", \"bottom\"),\n    legend.outside = TRUE\n  )\n\n\n\n\n\nFigure 2.5: Result: Frost Risk for each Municipality\n\n\n\n\n\n\nCode\n# Results Frost Risk - Land \n\n#| label: tbl-weight-flood-agriculture\n#| tbl-cap: \"Final Weightings for the Reclassification - Land Use\"\n\n# Resample rasters to align resolutions\nland_reclassified  &lt;- terra::resample(land_reclassified, final_raster)\n\nland_reclassified[land_reclassified == 0] &lt;- NA\n\nresult_2 &lt;- (final_raster * land_reclassified)\n\n\n\n\nCode\n# Colors \n# library(RColorBrewer)\n# display.brewer.all()\n\n# change name\nnames(final_raster) &lt;- \"Frost Risk\"\n# Breaks\nbreaks &lt;- c(0, 0.3, 0.4, 0.5, 0.6, 0.65, 0.7, 0.75, 0.8, 1)\n\n# view\ntmap_mode(\"plot\")\n\ntm_shape(result_2) +\n  tm_raster(style = \"cont\", palette = \"Reds\", breaks = breaks) +  # Change style to \"cont\" or \"cat\"\n    tm_scale_bar(breaks = c(0, 5, 10), text.size = 0.9, position =  c(\"left\")) +  \n  tm_compass(type = \"4star\", size = 6, position = c(\"right\", \"top\")) +\n  tm_credits(\"Author: Johannes Quente\", fontface = \"italic\", align = \"right\") +\n  tm_graticules(alpha = 0.3) +\n  tm_layout(\n    legend.text.size = 1,\n    legend.position = c(\"left\", \"bottom\"),\n    legend.outside = TRUE\n  )\n\n\n\n\n\n\n\n\nFick, Stephen E., and Robert J. Hijmans. 2017. “WorldClim 2: New 1km Spatial Resolution Climate Surfaces for Global Land Areas.” International Journal of Climatology 37 (12): 4302–15. https://www.worldclim.org/data/worldclim21.html.\n\n\nKotikot, Susan Malaso, and Simon M Onywere. 2014. “Geocarto International Application of GIS and Remote Sensing Techniques in Frost Risk Mapping for Mitigating Agricultural Losses in the Aberdare Ecosystem, Kenya Application of GIS and Remote Sensing Techniques in Frost Risk Mapping for Mitigating Agricultural Losses in the Aberdare Ecosystem, Kenya” 30: 104–21. https://doi.org/10.1080/10106049.2014.965758."
  },
  {
    "objectID": "Flood_Risk.html#sec-sec-flood",
    "href": "Flood_Risk.html#sec-sec-flood",
    "title": "3  Flood Risk",
    "section": "3.1 Frame of Reference",
    "text": "3.1 Frame of Reference\nThis research presents a low-cost and flexible methodology for mapping flood hazard and assessing resulting risk. The methodology is generic and can be customized for freely available data with global coverage, allowing for worldwide risk assessment. Region-specific information can be added to the default workflow when available.\nFloods are a significant global hazard, posing threats to both human societies and natural ecosystems. The increase in flood occurrences is caused by the interaction between climate variations and changes in land-use patterns. These dynamics put significant stress on river systems, leading to significant changes in river morphology (Hagos et al. 2022).\nThis study aims to evaluate flood risk and identify inundation zones in the Valle Alto region of Cochabamba, including Aiquile, Pasorapa, Pojo, and Totoro. The genesis of floods is influenced by various factors such as soil properties, terrain slope, elevation, drainage density, and land cover characteristics. In Bolivia, some of these factors were included in the analysis framework due to limited data availability.\nThe analytic hierarchy process was used to determine the relative weights assigned to each contributing factor, incorporating insights from public institutions and expert consensus. The acquired data was processed in the R-Studio environment to construct a comprehensive flood hazard map.\nThe aim of this study is to inform evidence-based decision-making processes, ultimately enhancing the resilience of communities and ecosystems to flood-related hazards.\n\n\nCode\n| Source | Description |\n| ------ | ----------- |\n| [Applied Water Science](https://link.springer.com/article/10.1007/s13201-022-01674-8) | Study on \"Flood hazard assessment and mapping using GIS integrated with multi-criteria decision analysis in upper Awash River basin, Ethiopia\". |\n| [MDPI](https://www.mdpi.com/2073-4441/11/11/2371/htm) | Flexible methodology and toolbox for flood risk mapping worldwide. |\n| [Sustainability](https://www.mdpi.com/2071-1050/14/8/4483) | Study on \"Urban Flood-Risk Assessment and Management Using Integrated Multi-Parameter Decision-Making Approach and Geospatial Techniques\". |\n| [Springer](https://link.springer.com/referenceworkentry/10.1007/978-981-16-8800-3_177-1) | Risk Mapping in Managing Flood Vulnerability in Disaster Management. |\n| [MDPI](https://www.mdpi.com/2071-1050/14/6/3251) | Flood Hazard and Risk Mapping by Applying an Explainable Machine Learning Framework Using Satellite Imagery and GIS Data. |\n| [MDPI](https://www.mdpi.com/2073-4441/11/11/2371) | Flood Risk Mapping Worldwide: A Flexible Methodology and Toolbox. |\n\n\n\n\nCode\n# read libraries\nlibrary(raster)\nlibrary(terra)\nlibrary(ggplot2)\nlibrary(tmap)\nlibrary(sf)\nlibrary(dplyr)\nlibrary(tibble)\nlibrary(knitr)\nlibrary(stringr)\n\n\n\n\nCode\n# read data\nbol   &lt;- read_sf(\"gadm41_BOL_3.shp\", crs = 4326)\ncocha &lt;- bol %&gt;% filter(NAME_1 == \"Cochabamba\")\n\nPasorapa &lt;- cocha %&gt;% filter(NAME_3 == \"Pasorapa\")\nAiquile  &lt;- cocha %&gt;% filter(NAME_3 == \"Aiquile\")\n\n# new\ntotora   &lt;- cocha %&gt;% filter(NAME_3 == \"Totora\")\npojo     &lt;- cocha %&gt;% filter(NAME_3 == \"Pojo\")\n\n# set extent\nall_municipalities &lt;- rbind(Pasorapa, Aiquile, totora, pojo)\n\n# read dm-raster\ndem &lt;- rast(\"s20w070_dem.tif\")"
  },
  {
    "objectID": "Flood_Risk.html#methodology-of-the-case-study",
    "href": "Flood_Risk.html#methodology-of-the-case-study",
    "title": "3  Flood Risk",
    "section": "3.2 Methodology of the Case Study",
    "text": "3.2 Methodology of the Case Study\nIn order to conduct this Multicriteria Analysis, a comparable approach to Hagos et al. (2022) has been undertaken. The analysis employs numerous raster and vector layers, integrating weighted factors. The entire project is conducted within the R-Studio environment. Key packages utilized in achieving the final results are listed in R-Studio Libraries, providing essential functions for the conducted calculations. The following data has been used.\nTable 3.1 shows the data used in order to conduct the Multicriteria Analysis on the four municipalities in the Cono Sur Region in Cochabamba, Bolivia.\nTable 3.2 presents the classification and evaluation of various criteria for drought exposure, illustrating the factors influencing each classification. This table outlines the criteria and their corresponding classifications as follows.\nThe subsequent sections present the reclassified data for four municipalities in the state of Cochabamba. These sections detail the process of cleaning and further processing the raw data, with relevant code snippets linked to the Appendix for reference.\n\n\nCode\n# Creating a table\nshapes &lt;- c(\"Political Map\", \"River Data\", \"Precipitation\", \"DEM (Inclination)\")\ndata_type &lt;- c(\"Vector\", \"Vector\", \"Raster (30 s)\", \"Raster (15 s)\")\n\nsources &lt;- c(\n  \"[gadm.org](https://gadm.org/download_country.html)\",\n  \"@linke2019global\",\n  \"@fick2017worldclim\", \n  \"[Hydrosheds.org](https://www.hydrosheds.org/hydrosheds-core-downloads)\")\n\nperiod &lt;- c(\"2024\", \"2013\", \"1970-2000\", \"2013\")\n\n# Repeat the sources based on the number of shapes\nrepeated_sources &lt;- rep(sources, length.out = length(shapes))\n\n# Create the data frame\ndata &lt;- data.frame(Data = shapes, Types = data_type, Source = repeated_sources, Period_Year = period)\n\ncolnames(data) &lt;- c(\"Data\", \"Types\", \"Source\", \"Period/Year\")\n\nkable(data)\n\n\n\n\nTable 3.1: Used Data in the Analysis\n\n\n\n\n\n\n\n\nData\nTypes\nSource\nPeriod/Year\n\n\n\n\nPolitical Map\nVector\ngadm.org\n2024\n\n\nRiver Data\nVector\nLinke et al. (2019)\n2013\n\n\nPrecipitation\nRaster (30 s)\nFick and Hijmans (2017)\n1970-2000\n\n\nDEM (Inclination)\nRaster (15 s)\nHydrosheds.org\n2013\n\n\n\n\n\n\n\n\nCode\n# Creating a sample data frame\ndata &lt;- data.frame(\n  Criteria = c(\"River Data\", \"Precipitation\", \"DEM (Inclination)\"),\n  `Very High` = c(\"&lt;200\", \"&gt;1058\", \"&lt;10\"),\n  High        = c(\"200-700\", \"640-1058\", \"10-20\"),\n  Moderate    = c(\"700-2000\", \"571-640\", \"20-30\"),\n  Low         = c(\"2000-5000\", \"514-571\", \"30-45\"),\n  `Very Low`  = c(\"&gt;5000\", \"&lt;513.8\", \"&gt;45\"),\n  `Weights`   = c(2.5, 4, 3.5)\n)\n  \n# Visualizing the table with kable\nkable(data, align = \"c\")\n\n\n\n\nTable 3.2: Classiﬁcation and evaluation of drought exposure according to factors\n\n\n\n\n\n\n\n\n\n\n\nCriteria\nVery.High\nHigh\nModerate\nLow\nVery.Low\nWeights\n\n\n\n\nRiver Data\n&lt;200\n200-700\n700-2000\n2000-5000\n&gt;5000\n2.5\n\n\nPrecipitation\n&gt;1058\n640-1058\n571-640\n514-571\n&lt;513.8\n4.0\n\n\nDEM (Inclination)\n&lt;10\n10-20\n20-30\n30-45\n&gt;45\n3.5\n\n\n\n\n\n\n\n\nCode\n# Read data and crop to Pasorapa\n# read data \n\n## shapes\n# veg   &lt;- read_sf(\"veg_nv_bol_geo.shp\") # Vegetation\n# geo   &lt;- read_sf(\"Geologia.shp\") # Geografia\n# geo   &lt;- read_sf(\"geologia.shp\", crs = 4326)   # Geografia\n# dsmw  &lt;- read_sf(\"DSMW.shp\", crs = 4326)\n\n# other kind of vegetation\n# se_bo_geo &lt;- read_sf(\"se_bo_geo.shp\")\n\n# temperatur min\n# tmin01 &lt;- rast(\"wc2.1_30s_tmin_01.tif\")\n# tmin02 &lt;- rast(\"wc2.1_30s_tmin_02.tif\")\n# tmin03 &lt;- rast(\"wc2.1_30s_tmin_03.tif\")\n# tmin04 &lt;- rast(\"wc2.1_30s_tmin_04.tif\")\n# tmin05 &lt;- rast(\"wc2.1_30s_tmin_05.tif\")\n# tmin06 &lt;- rast(\"wc2.1_30s_tmin_06.tif\")\n# tmin07 &lt;- rast(\"wc2.1_30s_tmin_07.tif\")\n# tmin08 &lt;- rast(\"wc2.1_30s_tmin_08.tif\")\n# tmin09 &lt;- rast(\"wc2.1_30s_tmin_09.tif\")\n# tmin10 &lt;- rast(\"wc2.1_30s_tmin_10.tif\")\n# tmin11 &lt;- rast(\"wc2.1_30s_tmin_11.tif\")\n# tmin12 &lt;- rast(\"wc2.1_30s_tmin_12.tif\")\n\n# temperatur max\n# tmax01 &lt;- rast(\"wc2.1_30s_tmax_01.tif\")\n# tmax02 &lt;- rast(\"wc2.1_30s_tmax_02.tif\")\n# tmax03 &lt;- rast(\"wc2.1_30s_tmax_03.tif\")\n# tmax04 &lt;- rast(\"wc2.1_30s_tmax_04.tif\")\n# tmax05 &lt;- rast(\"wc2.1_30s_tmax_05.tif\")\n# tmax06 &lt;- rast(\"wc2.1_30s_tmax_06.tif\")\n# tmax07 &lt;- rast(\"wc2.1_30s_tmax_07.tif\")\n# tmax08 &lt;- rast(\"wc2.1_30s_tmax_08.tif\")\n# tmax09 &lt;- rast(\"wc2.1_30s_tmax_09.tif\")\n# tmax10 &lt;- rast(\"wc2.1_30s_tmax_10.tif\")\n# tmax11 &lt;- rast(\"wc2.1_30s_tmax_11.tif\")\n# tmax12 &lt;- rast(\"wc2.1_30s_tmax_12.tif\")\n\n# precipitacion\n# precip01 &lt;- rast(\"wc2.1_30s_prec_01.tif\")\n# precip02 &lt;- rast(\"wc2.1_30s_prec_02.tif\")\n# precip03 &lt;- rast(\"wc2.1_30s_prec_03.tif\")\n# precip04 &lt;- rast(\"wc2.1_30s_prec_04.tif\")\n# precip05 &lt;- rast(\"wc2.1_30s_prec_05.tif\")\n# precip06 &lt;- rast(\"wc2.1_30s_prec_06.tif\")\n# precip07 &lt;- rast(\"wc2.1_30s_prec_07.tif\")\n# precip08 &lt;- rast(\"wc2.1_30s_prec_08.tif\")\n# precip09 &lt;- rast(\"wc2.1_30s_prec_09.tif\")\n# precip10 &lt;- rast(\"wc2.1_30s_prec_10.tif\")\n# precip11 &lt;- rast(\"wc2.1_30s_prec_11.tif\")\n# precip12 &lt;- rast(\"wc2.1_30s_prec_12.tif\")\n\n## Satellite Data\n# sat_full &lt;- rast(\"sat_full.tiff\")\n\n# Land Use\n# land &lt;- rast(\"Change_10S_070W.tif\")\n\n# print(land, vp = grid::viewport(0.8, 0.185, width = 0.2, height = 0.45))\n\n\n\n\nCode\n# River Data\n##  200 meters Buffer River data\nbuffer_river &lt;- sf::st_buffer(Pasorapa, 200)\n\n\n\n3.2.1 River Data\nThe data utilized aimed to estimate the distance to rivers, serving as a proxy for assessing the likelihood of drought occurrences. The underlying assumption was that greater distances from rivers correspond to increased drought probabilities. To calculate distances, the terra::distance function was employed on the river shapefiles associated with various municipalities. Detailed processing steps are outlined in the subsequent chapter of the Appendix.\nThe reclassification has been calculated according to Table 3.2. Defining the classification values Gao et al. (2023) has been using different values in order to classify and evaluate drought exposure, hazard factors, vulnerability, and mitigation capacity.\n\n\nCode\nriver_crop &lt;- read_sf(\"river_crop.shp\")\n\nbuffer_river &lt;- st_buffer(river_crop, 100)\n\n# Create an empty raster to rasterize into\nempty_raster &lt;- raster(extent(buffer_river), resolution = c(0.0008333333, 0.0008333333))\n\n  # Rasterize\nriver_raster &lt;- terra::rasterize(buffer_river, empty_raster, field = \"CATCH_SKM\")\n\n# , background = 0\n\n  # calc into %\nriver_raster &lt;- (river_raster / 100)\n\n# River\n##  crop and mask dem\nriver_crop &lt;- terra::crop(river_raster, Pasorapa)\nriver_mask &lt;- mask(river_crop, Pasorapa)\n\n# plot(river_mask)\n\n\n\n\nCode\n# Define a common CRS for all your rasters\ncommon_crs &lt;- \"+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0\"\n\n# Assign the CRS to each raster\ncrs(river_raster) &lt;- crs(river_subset_sp) &lt;- common_crs\n\n# Calculate distances on the subset\ndist_to_river &lt;- terra::distance(river_mask)\n\n# writeRaster(dist_to_river, \"dist_to_river_pasorapa.tif\")\n\ndist_to_river &lt;- rast(\"dist_to_river_pasorapa.tif\")\n\n# Plot the distances raster\nplot(dist_to_river)\n\n\n\n\nCode\n# Define areas of interest\nareas &lt;- list(\n  pasorapa = Pasorapa,\n  aiquile = Aiquile,\n  totora = totora,\n  pojo = pojo\n)\n\n# Define river distance raster files\nriver_rasters &lt;- list(\n  pasorapa = \"dist_to_river_pasorapa.tif\",\n  aiquile  = \"dist_to_river_aiquile.tif\",\n  totora   = \"dist_to_river_totora.tif\",\n  pojo     = \"dist_to_river_pojo.tif\"\n)\n\n# reclass\n# Create a tibble with the reclassification table\nreclass_table_river &lt;- tribble(\n  ~from, ~to, ~becomes,\n  5000,    Inf,  0,     \n  2000,    5000,  0.25,  \n  700,    2000,  0.5,    \n  200,    700,  0.75,   \n  -Inf,   200,  1       \n)\n\n# Common CRS for all rasters\ncommon_crs &lt;- \"+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0\"\n\n# Loop through areas of interest\nfor (area_name in names(areas)) {\n  # Load river distance raster\n  dist_to_river &lt;- rast(river_rasters[[area_name]])\n  \n  # Assign common CRS\n  crs(dist_to_river) &lt;- common_crs\n  st_crs(areas[[area_name]]) &lt;- common_crs\n  \n  # Crop and mask river distance raster\n  river_crop &lt;- crop(dist_to_river, areas[[area_name]])\n  river_mask &lt;- mask(river_crop, areas[[area_name]])\n  \n  # Reclassify the river distance raster\n  river_reclassified &lt;- classify(river_mask, reclass_table_river, include.lowest = TRUE, right = TRUE)\n  \n  # Assign to appropriate variable\n  assign(paste0(\"river_reclassified_\", area_name), river_reclassified)\n}\n\n\n\n\nCode\n# write / safe Raster\n# writeRaster(dist_to_river, \"dist_to_river_pasorapa.tif\")\ndist_to_river &lt;- rast(\"dist_to_river_pasorapa.tif\")\n\n# River\n##  crop and mask dem\nriver_crop &lt;- terra::crop(dist_to_river, Pasorapa)\nriver_mask &lt;- mask(river_crop, Pasorapa)\n\n# reclass\n# Create a tibble with the reclassification table\nreclass_table_river &lt;- tribble(\n  ~from, ~to, ~becomes,\n  5000,    Inf,  0,     \n  2000,    5000,  0.25,  \n  700,    2000,  0.5,    \n  200,    700,  0.75,   \n  -Inf,   200,  1       \n)\n\n# Reclassify the slope raster based on the reclassification table\nriver_reclassified_pasorapa &lt;- terra::classify(river_mask, reclass_table_river, include.lowest = TRUE, right = TRUE)\n\n# kable(reclass_table_river)\n\n# write/ safe Raster\ndist_to_river &lt;- rast(\"dist_to_river_aiquile.tif\")\n\ncommon_crs &lt;- \"+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0\"\n\n# Assign the CRS to each raster\ncrs(dist_to_river) &lt;- common_crs\nst_crs(Aiquile)    &lt;- common_crs\n\n# River\n##  crop and mask dem\nriver_crop &lt;- terra::crop(dist_to_river, Aiquile)\nriver_mask &lt;- mask(river_crop, Aiquile)\n\n# Reclassify the slope raster based on the reclassification table\nriver_reclassified_aiquile &lt;- terra::classify(river_mask, reclass_table_river, include.lowest = TRUE, right = TRUE)\n\n# pojo\ndist_to_river_pojo   &lt;- rast(\"dist_to_river_pojo.tif\")\n\nriver_reclassified_pojo &lt;- terra::classify(dist_to_river_pojo, reclass_table_river, include.lowest = TRUE, right = TRUE)\n\n\n# totora\ndist_to_river_totora &lt;- rast(\"dist_to_river_totora.tif\")\n\n\nriver_reclassified_totora &lt;- terra::classify(dist_to_river_totora, reclass_table_river, include.lowest = TRUE, right = TRUE)\n\n\n\n?(caption)\n\n\n\n\n\nCode\n# change name\nnames(river_reclassified_pasorapa) &lt;- \"Flood Risk\"\n\n# Color Palette in R\ncolors   &lt;- c(\"darkgreen\",\"lightgreen\",\"yellow\", \"orange\",\"red\")\ncolors_1 &lt;- c(\"lightgreen\",\"yellow\", \"orange\",\"red\")\n# \n# # Define the reclassification table\n# reclass_table_modify &lt;- tribble(\n#   ~from, ~to, ~becomes,\n#   0, 0, 0.25  # Reclassify 0 to 0.25\n# )\n# \n# # Reclassify the river_reclassified_pasorapa raster\n# river_reclassified_pasorapa &lt;- classify(river_reclassified_pasorapa, reclass_table_modify, include.lowest = TRUE, right = TRUE)\n\n\n# view\ntmap_mode(\"plot\")\n\ntm_shape(all_municipalities) +\n  tm_polygons() +\ntm_shape(river_reclassified_pasorapa) +\n  tm_raster(palette = colors) + \ntm_shape(river_reclassified_aiquile) +\n  tm_raster(legend.show = FALSE, palette = colors) +  \ntm_shape(river_reclassified_totora) +\n  tm_raster(legend.show = FALSE, palette = colors) +  \ntm_shape(river_reclassified_pojo) +\n  tm_raster(legend.show = FALSE, palette = colors_1) +  \ntm_shape(all_municipalities) +\n    tm_borders(lwd = 2, col = \"black\") +\n    tm_layout(frame = FALSE) +\n  tm_text(\"NAME_3\", size = 0.7) +\n    tm_scale_bar(breaks = c(0, 5, 10), text.size = 0.9, position = c(\"left\")) +  \n  tm_compass(type = \"4star\", size = 6, position = c(\"right\", \"top\")) +\n  tm_credits(\"Author: Johannes Quente\", fontface = \"italic\", align = \"right\") +\n  tm_graticules(alpha = 0.3) +\n  tm_layout(\n    legend.text.size = 1,\n    legend.position = c(\"left\", \"bottom\"),\n    legend.outside = TRUE\n  )\n\n\n\n\n\nFigure 3.1: Reclassification River Distance\n\n\n\n\n\n\nCode\n### Downstream loop calc.\n\n# Function to find all downstream rivers for a given river ID\nfind_downstream     &lt;- function(start_id, data) {\n  downstream_rivers &lt;- vector(mode = \"numeric\")\n  current_id        &lt;- start_id\n  \n  while (!is.na(current_id)) {\n    downstream_rivers &lt;- c(downstream_rivers, current_id)\n    current_id &lt;- data[data$river_id == current_id, \"NEXT_DOWN\"]\n  }\n  \n  return(downstream_rivers)\n}\n\n# Usage: Replace 'start_id' with your initial river ID\nstart_id &lt;- 61259906\nresult &lt;- find_downstream(start_id, river_crop)\nprint(result)\n\n\n\n\nCode\n### terra::distance calc.\n\nriver_crop &lt;- read_sf(\"river_crop.shp\")\n\nbuffer_river &lt;- st_buffer(river_crop, 100)\n\n# Create an empty raster to rasterize into\nempty_raster &lt;- raster(extent(buffer_river), resolution = c(0.0008333333, 0.0008333333))\n\n  # Rasterize\nriver_raster &lt;- terra::rasterize(buffer_river, empty_raster, field = \"CATCH_SKM\", background = 0)\n\n  # calc into %\nriver_raster &lt;- (river_raster / 100)\n\nplot(river_raster)\n\n\n\n\n\n3.2.2 Precipitation Data\nThe following Data provided by Fick and Hijmans (2017) resembles Precipitation Data on a 30 Arc Second Accuracy. The format provides one Raster-Layer for each month.\nTwelve raster layers have been aggregated to generate a unified raster layer, facilitating subsequent classification. The outcome is a comprehensive raster layer encompassing the total precipitation for the average year spanning from 1970 to 2000. The utilized code is available in the Appendix In the reclassification process, values were partitioned into five equally distributed groups based on frequency, with each group representing 20% of the total data frequency. The distribution and grouping methodology are illustrated in Figure 3.2. The reclassification has been calculated according to Table 3.2.\n\n\nCode\nprecip_pasorapa &lt;- rast(\"sum_raster_pasorapa.tif\")\nprecip_aiquile  &lt;- rast(\"sum_raster.tif\")\n\nprecip_pojo     &lt;- rast(\"precip_pojo.tif\")\nprecip_totora   &lt;- rast(\"precip_totora.tif\")\n\nprecip_todos    &lt;- rast(\"precip_todos.tif\")\n\n# Reclass\n# Create a tibble with the reclassification table\nreclass_table_precip &lt;- tribble(\n  ~from, ~to, ~becomes,\n  1058.2, Inf,     1,     \n  640,    1058.2,  0.75,  \n  571,    640,     0.5,   \n  513.8,  571,     0.25,  \n  -Inf,   513.8,   0      \n)\n\n# Reclassify the slope raster based on the reclassification table\nprecip_reclassified_pasorapa &lt;- terra::classify(precip_pasorapa, reclass_table_precip, include.lowest = TRUE, right = TRUE)\n\nprecip_reclassified_aiquile &lt;- terra::classify(precip_aiquile, reclass_table_precip, include.lowest = TRUE, right = TRUE)\n\nprecip_reclassified_pojo &lt;- terra::classify(precip_pojo, reclass_table_precip, include.lowest = TRUE, right = TRUE)\n\nprecip_reclassified_totora &lt;- terra::classify(precip_totora, reclass_table_precip, include.lowest = TRUE, right = TRUE)\n\n# todos\nprecip_reclassified_todos &lt;- terra::classify(precip_todos, reclass_table_precip, include.lowest = TRUE, right = TRUE)\n\n\n\n?(caption)\n\n\n\n\n\nCode\n# Specify the number of breaks (bins)\nnum_breaks &lt;- 5\n\nbreak_values &lt;- quantile(values(precip_todos, na.rm = TRUE), probs = seq(0, 1, length.out = num_breaks + 1))\n\n# Create the histogram with equal-frequency breaks\nhist(values(precip_todos), breaks = \"FD\", main = \"Histogram of Data Distribution\", xlab = \"Precipitation (mm)\", col = \"skyblue\", border = \"black\", plot = TRUE)\n\n# Add vertical lines to represent the breaks\nabline(v = quantile(values(precip_todos, na.rm = TRUE), probs = seq(0, 1, length.out = num_breaks + 1)), col = \"red\", lty = 2)\n\n\n\n\n\nFigure 3.2: Distribution of the Precipitation Data\n\n\n\n\n\n\nCode\ncolors   &lt;- c(\"darkgreen\",\"lightgreen\",\"yellow\", \"orange\",\"red\")\n\n# change name\nnames(precip_reclassified_todos) &lt;- \"Flood Risk\"\n\ntm_shape(all_municipalities) +\n  tm_polygons() +\ntm_shape(precip_reclassified_todos) +\n  tm_raster(palette = colors) + \ntm_shape(all_municipalities) +\n    tm_borders(lwd = 2, col = \"black\") +\n    tm_layout(frame = FALSE) +\n  tm_text(\"NAME_3\", size = 0.7) +\n    tm_scale_bar(breaks = c(0, 5, 10), text.size = 0.9, position = c(\"left\")) +  \n  tm_compass(type = \"4star\", size = 6, position = c(\"right\", \"top\")) +\n  tm_credits(\"Author: Johannes Quente\", fontface = \"italic\", align = \"right\") +\n  tm_graticules(alpha = 0.3) +\n  tm_layout(\n    legend.text.size = 1,\n    legend.position = c(\"left\", \"bottom\"),\n    legend.outside = TRUE\n  )\n\n\n\n\n\nFigure 3.3: Reclassification Result of the Precipitation Data\n\n\n\n\n\n\n\n3.2.3 DEM (Inclination) Data\nThe provided Digital Elevation Model (DEM) consists of raster values showcasing variations in altitudes. These altitude values where converted into slope data using the terra::terrain -function from the Terra package. The reclassification has been calculated according to Table 3.2.\nSubsequently, the slope data was categorized into varying degrees of possibility of Flood in percent based on their inclination. For a detailed view of the reclassification code, please refer to the Appendix.\n\n\nCode\n# read data\n# Totora\ndem_reclassified_totora  &lt;- readRDS(\"dem_reclassified_totora.rds\")\n\n# Aiquile\ndem_reclassified_aiquile &lt;- readRDS(\"dem_reclassified_aiquile.rds\")\n\n# Pasorapa\ndem_reclassified_pasorapa &lt;- readRDS(\"dem_reclassified_pasorapa.rds\")\n\n# Pojo\ndem_reclassified_pojo    &lt;- readRDS(\"dem_reclassified_pojo.rds\")\n\n\n\n\nCode\n# DEM Pasorapa\n##  crop and mask dem\ndem_crop &lt;- terra::crop(dem, Pasorapa)\ndem_mask_pasorapa &lt;- mask(dem_crop, Pasorapa)\n\nterrain_pasorapa &lt;- terrain(dem_mask_pasorapa)\n\n# DEM Aiquile\n##  crop and mask dem\ndem_crop &lt;- terra::crop(dem, Aiquile)\ndem_mask_Aiquile &lt;- mask(dem_crop, Aiquile)\n\nterrain_dem_mask_Aiquile &lt;- terrain(dem_mask_Aiquile)\n\n# DEM Totora\n##  crop and mask dem\ndem_crop &lt;- terra::crop(dem, totora)\ndem_mask_totora &lt;- mask(dem_crop, totora)\n\nterrain_totora &lt;- terrain(dem_mask_totora)\n\n# DEM Pojo\n##  crop and mask dem\ndem_crop &lt;- terra::crop(dem, pojo)\ndem_mask_pojo &lt;- mask(dem_crop, pojo)\n\nterrain_pojo &lt;- terrain(dem_mask_pojo)\n\n# Create a tibble with the reclassification table\nreclass_table_dem &lt;- tribble(\n  ~from, ~to, ~becomes,\n  0, 10, 1,           # 0-10: Plano\n  10, 20, 0.56,           # 10-20: Mod. inclinado\n  20, 30, 0.34,          # 20-30: Inclinado\n  30, 45, 0.2,          # 30-45: Mod. empinado\n  45, Inf,0.09            # 45 and above: Fuert. empinado\n)\n\n# Assuming you have a slope raster 'slope_raster'\n# Reclassify the slope raster based on the reclassification table\ndem_reclassified_pasorapa &lt;- classify(terrain_pasorapa, reclass_table_dem, include.lowest = TRUE, right = TRUE)\n\ndem_reclassified_aiquile &lt;- classify(terrain_aiquile, reclass_table_dem, include.lowest = TRUE, right = TRUE)\n\ndem_reclassified_totora &lt;- classify(terrain_totora, reclass_table_dem, include.lowest = TRUE, right = TRUE)\n\ndem_reclassified_pojo &lt;- classify(terrain_pojo, reclass_table_dem, include.lowest = TRUE, right = TRUE)\n\n\n\n\nCode\n# Define areas of interest\nareas &lt;- list(\n  pasorapa = Pasorapa,\n  aiquile = Aiquile,\n  totora = totora,\n  pojo = pojo\n)\n\n# Create a tibble with the reclassification table\nreclass_table_dem &lt;- tribble(\n  ~from, ~to, ~becomes,\n  0, 10, 1,           # 0-10: Plano\n  10, 20, 0.56,       # 10-20: Mod. inclinado\n  20, 30, 0.34,       # 20-30: Inclinado\n  30, 45, 0.2,        # 30-45: Mod. empinado\n  45, Inf,0.09        # 45 and above: Fuert. empinado\n)\n\n# Loop through areas of interest\nfor (area_name in names(areas)) {\n  # Crop and mask dem\n  dem_crop &lt;- crop(dem, areas[[area_name]])\n  dem_mask &lt;- mask(dem_crop, areas[[area_name]])\n  \n  # Calculate terrain\n  terrain &lt;- terrain(dem_mask)\n  \n  # Reclassify DEM\n  dem_reclassified &lt;- classify(terrain, reclass_table_dem, include.lowest = TRUE, right = TRUE)\n  \n  # Assign to appropriate variable\n  assign(paste0(\"dem_reclassified_\", area_name), dem_reclassified)\n}\n\n\n\n\nCode\n# change name\nnames(dem_reclassified_aiquile) &lt;- \"Flood Risk\"\n\n\n# view\ntmap_mode(\"plot\")\n\ntm_shape(all_municipalities) +\n  tm_polygons() +\ntm_shape(dem_reclassified_aiquile) +\n  tm_raster(palette = colors) + \ntm_shape(dem_reclassified_pasorapa) +\n  tm_raster(legend.show = FALSE, palette = colors) +  \ntm_shape(dem_reclassified_pojo) +\n  tm_raster(legend.show = FALSE, palette = colors) +  \ntm_shape(dem_reclassified_totora) +\n  tm_raster(legend.show = FALSE, palette = colors) +  \ntm_shape(all_municipalities) +\n    tm_borders(lwd = 2, col = \"black\") +\n    tm_layout(frame = FALSE) +\n  tm_text(\"NAME_3\", size = 0.7) +\n    tm_scale_bar(breaks = c(0, 5, 10), text.size = 0.9, position = c(\"left\")) +  \n  tm_compass(type = \"4star\", size = 6, position = c(\"right\", \"top\")) +\n  tm_credits(\"Author: Johannes Quente\", fontface = \"italic\", align = \"right\") +\n  tm_graticules(alpha = 0.3) +\n  tm_layout(\n    legend.text.size = 1,\n    legend.position = c(\"left\", \"bottom\"),\n    legend.outside = TRUE\n  )\n\n\n\n\n\nFigure 3.4: Reclassification of DEM derived Inclination"
  },
  {
    "objectID": "Flood_Risk.html#results-flood-risk",
    "href": "Flood_Risk.html#results-flood-risk",
    "title": "3  Flood Risk",
    "section": "3.3 Results Flood Risk",
    "text": "3.3 Results Flood Risk\n\n\nCode\n### Aiquile\n\n# Resample aspect raster to match the extent and resolution of min_temp_pasorapa_reclassified\n\nprecip_reclassified &lt;- terra::resample(precip_reclassified_aiquile, dem_reclassified_aiquile)\n\nriver_reclassified &lt;- terra::resample(river_reclassified_aiquile, precip_reclassified)\n\n# Adjusted weights\nweight_river    &lt;- 0.25\nweight_dem      &lt;- 0.35\nweight_precip   &lt;- 0.4\n\n# Perform the adjusted weighted combination\nfinal_raster &lt;- weight_river    * river_reclassified +\n                weight_precip   * precip_reclassified +\n                weight_dem      * dem_reclassified_aiquile\n\nfinal_raster_aiquile &lt;- final_raster\n\n### Pojo\n\n# Resample aspect raster to match the extent and resolution of min_temp_pasorapa_reclassified\nprecip_reclassified &lt;- terra::resample(precip_reclassified_pojo, dem_reclassified_pojo)\n\nriver_reclassified &lt;- terra::resample(river_reclassified_pojo, precip_reclassified)\n\n# Perform the adjusted weighted combination\nfinal_raster &lt;- weight_river    * river_reclassified +\n                weight_precip   * precip_reclassified +\n                weight_dem      * dem_reclassified_pojo\n\nfinal_raster_pojo &lt;- final_raster\n\n### Pasorapa\n\n# Resample aspect raster to match the extent and resolution of min_temp_pasorapa_reclassified\nprecip_reclassified &lt;- terra::resample(precip_reclassified_pasorapa, dem_reclassified_pasorapa)\n\nriver_reclassified &lt;- terra::resample(river_reclassified_pasorapa, precip_reclassified)\n\n# Perform the adjusted weighted combination\nfinal_raster &lt;- weight_river    * river_reclassified +\n                weight_precip   * precip_reclassified +\n                weight_dem      * dem_reclassified_pasorapa\n\nfinal_raster_pasorapa &lt;- final_raster\n\n### Totora\n\n# Resample aspect raster to match the extent and resolution of min_temp_pasorapa_reclassified\nprecip_reclassified &lt;- terra::resample(precip_reclassified_totora, dem_reclassified_totora)\n\nriver_reclassified &lt;- terra::resample(river_reclassified_totora, precip_reclassified)\n\n# Perform the adjusted weighted combination\nfinal_raster &lt;- weight_river    * river_reclassified +\n                weight_precip   * precip_reclassified +\n                weight_dem      * dem_reclassified_totora\n\nfinal_raster_totora &lt;- final_raster\n\n\n\n\nCode\n# Define the municipalities\nmunicipalities &lt;- c(\"pojo\", \"pasorapa\", \"aiquile\", \"totora\")\n\n# Set the number of breaks (bins)\nnum_breaks &lt;- 5\n\n# Initialize an empty list to store numeric breaks for each municipality\nnumeric_breaks_list &lt;- list()\n\n# Loop over each municipality\nfor (municipality in municipalities) {\n  # Get the final raster data for the current municipality\n  final_raster &lt;- switch(municipality,\n                         pojo = final_raster_pojo,\n                         pasorapa = final_raster_pasorapa,\n                         aiquile = final_raster_aiquile,\n                         totora = final_raster_totora)\n    \n    # Compute the break values\n    break_values &lt;- quantile(values(final_raster, na.rm = TRUE), probs = seq(0, 1, length.out = num_breaks + 1))\n    \n# Store the numeric breaks in the list\n  numeric_breaks_list[[municipality]] &lt;- as.numeric(as.character(break_values))\n    \n    # Capitalize the first letter of the municipality name\n    capitalized_municipality &lt;- str_to_title(municipality)\n    \n    # Create the histogram with equal-frequency breaks\n  hist(values(final_raster), breaks = \"FD\", main = paste(\"Histogram of Flood Risk for\", capitalized_municipality), xlab = \"Flood Risk Values\", col = \"skyblue\", border = \"black\", plot = TRUE)\n    \n    # Add vertical lines to represent the breaks\n    abline(v = break_values, col = \"red\", lty = 2)\n}\n\n\n\n\n\n\n\n\n(a) Distribution of Pojo\n\n\n\n\n\n\n\n(b) Distribution of Pasorapa\n\n\n\n\n\n\n\n\n\n(c) Distribution of Aiquile\n\n\n\n\n\n\n\n(d) Distribution of Totora\n\n\n\n\nFigure 3.5: Data Distribution of the four Municipalities\n\n\n\n\n\nCode\n# Define breaks and labels for the reclassification\nbreaks_list &lt;- list(\n  pojo = numeric_breaks_list$pojo,\n  pasorapa = numeric_breaks_list$pasorapa,\n  aiquile = numeric_breaks_list$aiquile,\n  totora = numeric_breaks_list$totora\n)\n\nlabels &lt;- c(\"Muy bajo\", \"Bajo\", \"Moderado\", \"Alto\", \"Muy alto\")\n\n# Initialize an empty list to store categorized rasters for each municipality\ncategorized_rasters &lt;- list()\n\n# Loop over each municipality\nfor (municipality in municipalities) {\n  # Get the final raster data for the current municipality\n  final_raster &lt;- switch(municipality,\n                         pojo = final_raster_pojo,\n                         pasorapa = final_raster_pasorapa,\n                         aiquile = final_raster_aiquile,\n                         totora = final_raster_totora)\n  \n  # Define breaks for the current municipality\n  breaks &lt;- breaks_list[[municipality]]\n  \n  # Cut the raster values into categorical factors\n  factor_raster &lt;- cut(values(final_raster), breaks = breaks, labels = labels, include.lowest = TRUE)\n  \n  # Change the name of the raster\n  names(final_raster) &lt;- \"Flood Risk\"\n  \n  # Create a new raster with categorized values\n  r_categorized &lt;- final_raster\n  values(r_categorized) &lt;- as.factor(factor_raster)\n  \n  # Store the categorized raster in the list\n  categorized_rasters[[municipality]] &lt;- r_categorized\n}\n\n# Access categorized raster for a specific municipality\n# categorized_rasters$pasorapa\n\n\n\n\nCode\n# change name\nnames(categorized_rasters$pojo) &lt;- \"Flood Risk\"\n\ntm_shape(all_municipalities) +\n  tm_polygons() +\ntm_shape(categorized_rasters$pojo) +\n  tm_raster(palette = colors) +  \ntm_shape(categorized_rasters$pasorapa) +\n  tm_raster(legend.show = FALSE, palette = colors) +  \ntm_shape(categorized_rasters$aiquile) +\n  tm_raster(legend.show = FALSE, palette = colors) +  \ntm_shape(categorized_rasters$totora) +\n  tm_raster(legend.show = FALSE, palette = colors) +  \ntm_shape(all_municipalities) +\n    tm_borders(lwd = 2, col = \"black\") +\n    tm_layout(frame = FALSE) +\n  tm_text(\"NAME_3\", size = 0.7) +\n    tm_scale_bar(breaks = c(0, 5, 10), text.size = 0.9, position = c(\"left\")) +  \n  tm_compass(type = \"4star\", size = 6, position = c(\"right\", \"top\")) +\n  tm_credits(\"Author: Johannes Quente\", fontface = \"italic\", align = \"right\") +\n  tm_graticules(alpha = 0.3) +\n  tm_layout(\n    legend.text.size = 1,\n    legend.position = c(\"left\", \"bottom\"),\n    legend.outside = TRUE\n  )\n\n\n\n\n\nFigure 3.6: Result Flood Risk for each Municipality\n\n\n\n\n\n\n\n\n\n\nFick, Stephen E., and Robert J. Hijmans. 2017. “WorldClim 2: New 1km Spatial Resolution Climate Surfaces for Global Land Areas.” International Journal of Climatology 37 (12): 4302–15. https://www.worldclim.org/data/worldclim21.html.\n\n\nGao, Fengjie, Si Zhang, Rui Yu, Yafang Zhao, Yuxin Chen, and Ying Zhang. 2023. “Agricultural Drought Risk Assessment Based on a Comprehensive Model Using Geospatial Techniques in Songnen Plain, China.” Land 12 (June). https://doi.org/10.3390/land12061184.\n\n\nHagos, Yonas Gebresilasie, Tesfa Gebrie Andualem, · Mesenbet Yibeltal, · Mequanent, and Abathun Mengie. 2022. “Flood Hazard Assessment and Mapping Using GIS Integrated with Multi-Criteria Decision Analysis in Upper Awash River Basin, Ethiopia” 12: 148. https://doi.org/10.1007/s13201-022-01674-8.\n\n\nLinke, Simon, Bernhard Lehner, Cynthia Ouellet Dallaire, Joyce Ariwi, Günther Grill, Manu Anand, Paul Beames, et al. 2019. “Global Hydro-Environmental Sub-Basin and River Reach Characteristics at High Spatial Resolution.” Scientific Data 6: 283. https://doi.org/10.1038/s41597-019-0300-6."
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Belal, Abdel Aziz, Hassan R. El-Ramady, Elsayed S. Mohamed, and Ahmed M.\nSaleh. 2014. “Drought Risk Assessment Using Remote Sensing and GIS\nTechniques.” Arabian Journal of Geosciences 7 (January):\n35–53. https://doi.org/10.1007/s12517-012-0707-2.\n\n\nCondori, Bruno, Robert J. Hijmans, Jean Francois Ledent, and Roberto\nQuiroz. 2014. “Managing Potato Biodiversity to Cope with Frost\nRisk in the High Andes: A Modeling Perspective.” PLOS\nONE 9 (January): e81510. https://doi.org/10.1371/JOURNAL.PONE.0081510.\n\n\nFick, Stephen E., and Robert J. Hijmans. 2017. “WorldClim 2: New\n1km Spatial Resolution Climate Surfaces for Global Land Areas.”\nInternational Journal of Climatology 37 (12): 4302–15. https://www.worldclim.org/data/worldclim21.html.\n\n\nGao, Fengjie, Si Zhang, Rui Yu, Yafang Zhao, Yuxin Chen, and Ying Zhang.\n2023. “Agricultural Drought Risk Assessment Based on a\nComprehensive Model Using Geospatial Techniques in Songnen Plain,\nChina.” Land 12 (June). https://doi.org/10.3390/land12061184.\n\n\nHagos, Yonas Gebresilasie, Tesfa Gebrie Andualem, · Mesenbet Yibeltal, ·\nMequanent, and Abathun Mengie. 2022. “Flood Hazard Assessment and\nMapping Using GIS Integrated with Multi-Criteria Decision Analysis in\nUpper Awash River Basin, Ethiopia” 12: 148. https://doi.org/10.1007/s13201-022-01674-8.\n\n\nKotikot, Susan Malaso, and Simon M Onywere. 2014. “Geocarto\nInternational Application of GIS and Remote Sensing Techniques in Frost\nRisk Mapping for Mitigating Agricultural Losses in the Aberdare\nEcosystem, Kenya Application of GIS and Remote Sensing Techniques in\nFrost Risk Mapping for Mitigating Agricultural Losses in the Aberdare\nEcosystem, Kenya” 30: 104–21. https://doi.org/10.1080/10106049.2014.965758.\n\n\nLinke, Simon, Bernhard Lehner, Cynthia Ouellet Dallaire, Joyce Ariwi,\nGünther Grill, Manu Anand, Paul Beames, et al. 2019. “Global\nHydro-Environmental Sub-Basin and River Reach Characteristics at High\nSpatial Resolution.” Scientific Data 6: 283. https://doi.org/10.1038/s41597-019-0300-6.\n\n\nSaxena, Alder Keleman, Ximena Cadima Fuentes, Rhimer Gonzales Herbas,\nand Debbie L. Humphries. 2016. “Indigenous Food Systems and\nClimate Change: Impacts of Climatic Shifts on the Production and\nProcessing of Native and Traditional Crops in the Bolivian\nAndes.” Frontiers in Public Health 4 (March): 175055. https://doi.org/10.3389/FPUBH.2016.00020/BIBTEX.\n\n\nSun, Ruiling, Ge Gao, Zaiwu Gong, and Jie Wu. 2020. “A Review of\nRisk Analysis Methods for Natural Disasters.” Natural\nHazards 100 (January): 571–93. https://doi.org/10.1007/S11069-019-03826-7/METRICS.\n\n\nTanim, Ahad Hasan, Callum Blake McRae, Hassan Tavakol‐davani, and Erfan\nGoharian. 2022. “Flood Detection in Urban Areas Using Satellite\nImagery and Machine Learning.” Water 2022, Vol. 14, Page\n1140 14 (April): 1140. https://doi.org/10.3390/W14071140.\n\n\nTrovato, Maria Gabriella, Dana Ali, Jessica Nicolas, Ammar El Halabi,\nand Sarah Meouche. 2017. “Landscape Risk Assessment Model and\nDecision Support System for the Protection of the Natural and Cultural\nHeritage in the Eastern Mediterranean Area.” Land 2017, Vol.\n6, Page 76 6 (November): 76. https://doi.org/10.3390/LAND6040076.\n\n\nU. S. National Committee for the Decade for Natural Disaster Reduction.,\nNational Research Council (U.S.). 1991. “A Safer Future : Reducing\nthe Impacts of Natural Disasters,” 67."
  },
  {
    "objectID": "Appendix.html#sec-sec-libraries",
    "href": "Appendix.html#sec-sec-libraries",
    "title": "Appendix",
    "section": "R-Studio Libraries",
    "text": "R-Studio Libraries\n\n\nCode\n# libraries used\nlibrary(raster)\nlibrary(terra)\nlibrary(ggplot2)\nlibrary(tmap)\nlibrary(sf)\nlibrary(dplyr)\nlibrary(tibble)\nlibrary(knitr)\nlibrary(stringr)"
  },
  {
    "objectID": "Appendix.html#sec-sec-read",
    "href": "Appendix.html#sec-sec-read",
    "title": "Appendix",
    "section": "Reading Data",
    "text": "Reading Data\n\n\nCode\nbol   &lt;- read_sf(\"gadm41_BOL_3.shp\", crs = 4326) # Pasorapa extent\n\n# river data \nriver &lt;- read_sf(\"HydroRIVERS_v10_sa.shp\")\n\n## raster\ndem   &lt;- rast(\"s20w070_dem.tif\")"
  },
  {
    "objectID": "Appendix.html#sec-sec-process",
    "href": "Appendix.html#sec-sec-process",
    "title": "Appendix",
    "section": "Data Processing",
    "text": "Data Processing\n\n\nCode\n# select municipalities\n\ncocha &lt;- bol %&gt;% filter(NAME_1 == \"Cochabamba\")\n\n# filter der bol shapes Aiquile\nPasorapa &lt;- cocha %&gt;% filter(NAME_3 == \"Pasorapa\")\nAiquile  &lt;- cocha %&gt;% filter(NAME_3 == \"Aiquile\")\n\n# new\ntotora   &lt;- cocha %&gt;% filter(NAME_3 == \"Totora\")\npojo     &lt;- cocha %&gt;% filter(NAME_3 == \"Pojo\")\n\n# read bol_1.shp and Cochabamba.shp\nbol_1      &lt;- read_sf(\"bol_1.shp\")\nCochabamba &lt;- read_sf(\"Cochabamba.shp\")"
  },
  {
    "objectID": "Appendix.html#sec-sec-river",
    "href": "Appendix.html#sec-sec-river",
    "title": "Appendix",
    "section": "Processing River Data",
    "text": "Processing River Data\n\n\nCode\n# River Data Calculation with example on Pasorapa\n##  200 meters Buffer River data\nbuffer_river &lt;- sf::st_buffer(Pasorapa, 200)\n\n##  200 meters Buffer River data\nbuffer_river &lt;- sf::st_buffer(Pasorapa, 200)\n\nriver_crop &lt;- read_sf(\"river_crop.shp\")\n\nbuffer_river &lt;- st_buffer(river_crop, 100)\n\n# Create an empty raster to rasterize into\nempty_raster &lt;- raster(extent(buffer_river), resolution = c(0.0008333333, 0.0008333333))\n\n  # Rasterize\nriver_raster &lt;- terra::rasterize(buffer_river, empty_raster, field = \"CATCH_SKM\")\n\n  # calc into %\nriver_raster &lt;- (river_raster / 100)\n\n# River\n##  crop and mask dem\nriver_crop &lt;- terra::crop(river_raster, Pasorapa)\nriver_mask &lt;- mask(river_crop, Pasorapa)\n\n\n\n\nCode\n# Define areas of interest\nareas &lt;- list(\n  pasorapa = Pasorapa,\n  aiquile = Aiquile,\n  totora = totora,\n  pojo = pojo\n)\n\n# Define river distance raster files\nriver_rasters &lt;- list(\n  pasorapa = \"dist_to_river_pasorapa.tif\",\n  aiquile  = \"dist_to_river_aiquile.tif\",\n  totora   = \"dist_to_river_totora.tif\",\n  pojo     = \"dist_to_river_pojo.tif\"\n)\n\n# reclass\n# Create a tibble with the reclassification table\nreclass_table_river &lt;- tribble(\n  ~from, ~to, ~becomes,\n  5000,    Inf,  0,     \n  2000,    5000,  0.25,  \n  700,    2000,  0.5,    \n  200,    700,  0.75,   \n  -Inf,   200,  1       \n)\n\n# Common CRS for all rasters\ncommon_crs &lt;- \"+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0\"\n\n# Loop through areas of interest\nfor (area_name in names(areas)) {\n  # Load river distance raster\n  dist_to_river &lt;- rast(river_rasters[[area_name]])\n  \n  # Assign common CRS\n  crs(dist_to_river) &lt;- common_crs\n  st_crs(areas[[area_name]]) &lt;- common_crs\n  \n  # Crop and mask river distance raster\n  river_crop &lt;- crop(dist_to_river, areas[[area_name]])\n  river_mask &lt;- mask(river_crop, areas[[area_name]])\n  \n  # Reclassify the river distance raster\n  river_reclassified &lt;- classify(river_mask, reclass_table_river,\n                                 include.lowest = TRUE, right = TRUE)\n  \n  # Assign to appropriate variable\n  assign(paste0(\"river_reclassified_\", area_name), river_reclassified)\n}"
  },
  {
    "objectID": "Appendix.html#sec-sec-temp-max",
    "href": "Appendix.html#sec-sec-temp-max",
    "title": "Appendix",
    "section": "Processing Max. Temperature Data",
    "text": "Processing Max. Temperature Data\n\n\nCode\n# read data \n\n# temperatur max\ntmax01 &lt;- rast(\"wc2.1_30s_tmax_01.tif\")\ntmax02 &lt;- rast(\"wc2.1_30s_tmax_02.tif\")\ntmax03 &lt;- rast(\"wc2.1_30s_tmax_03.tif\")\ntmax04 &lt;- rast(\"wc2.1_30s_tmax_04.tif\")\ntmax05 &lt;- rast(\"wc2.1_30s_tmax_05.tif\")\ntmax06 &lt;- rast(\"wc2.1_30s_tmax_06.tif\")\ntmax07 &lt;- rast(\"wc2.1_30s_tmax_07.tif\")\ntmax08 &lt;- rast(\"wc2.1_30s_tmax_08.tif\")\ntmax09 &lt;- rast(\"wc2.1_30s_tmax_09.tif\")\ntmax10 &lt;- rast(\"wc2.1_30s_tmax_10.tif\")\ntmax11 &lt;- rast(\"wc2.1_30s_tmax_11.tif\")\ntmax12 &lt;- rast(\"wc2.1_30s_tmax_12.tif\")\n\n\n\n\nCode\n### Processing\n\n# LOOP\n\n# Crear una lista con los nombres de los objetos\nlista_temp &lt;- paste0(\"tmax\", sprintf(\"%02d\", 1:12))  \n# Generate names precip01 until precip12\n\n# Inicializar una lista vacía para almacenar los resultados\nlista_tmax_mask &lt;- list()\n\n# Iterar sobre cada objeto y aplicar las operaciones\nfor (i in seq_along(lista_temp)) {\n  # Acceder al objeto con el nombre correspondiente\n  tmax_obj &lt;- get(lista_temp[i])\n  \n  # Aplicar las operaciones crop y mask\n  tmax_crop &lt;- terra::crop(tmax_obj, Pasorapa)\n  tmax_mask &lt;- mask(tmax_crop, Pasorapa)\n  \n  # Almacenar el resultado en la lista\n  lista_tmax_mask[[i]] &lt;- tmax_mask\n}\n\nplot(lista_tmax_mask[[08]])\n\n# Stack the Values and calc the min for everything\n\n# Use rast() to convert the list to a SpatRaster object\nstacked_rasters &lt;- terra::rast(lista_tmax_mask)\n\n# Apply the cellStats function to find the minimum value for each pixel across the stack\nmax_values &lt;- terra::app(stacked_rasters, fun = max, na.rm = TRUE)\n\n\n\n\nCode\n### Reclassification of the Temp max Data\n\nmax_temp_pasorapa &lt;- readRDS(\"max_temp_pasorapa.rds\")\n\n# reclass\n# Create a tibble with the reclassification table\nreclass_table_max_temp &lt;- tribble(\n  ~from, ~to, ~becomes,\n  -Inf, 25, 0.2,    \n  25, 27, 0.4,   \n  27, 30, 0.6,   \n  30, Inf, 1\n)\n\n# Reclassify the slope raster based on the reclassification table\nmax_temp_reclassified_pasorapa &lt;- terra::classify(max_temp_pasorapa,\n          reclass_table_max_temp, include.lowest = TRUE, right = TRUE)\n\n# read data aiquile\nmax_temp_aiquile &lt;- readRDS(\"max_temp_aiquile.rds\")\n\n# Reclassify the slope raster based on the reclassification table\nmax_temp_reclassified_aiquile &lt;- terra::classify(max_temp_aiquile,\n          reclass_table_max_temp, include.lowest = TRUE, right = TRUE)\n\n# Totora\n\nmax_temp_totora &lt;- readRDS(\"max_temp_totora.rds\")\n\n# Reclassify the slope raster based on the reclassification table\nmax_temp_reclassified_totora &lt;- terra::classify(max_temp_totora,\n         reclass_table_max_temp, include.lowest = TRUE, right = TRUE)\n\n# Pojo\n\nmax_temp_pojo &lt;- readRDS(\"max_temp_pojo.rds\")\n\n# Reclassify the slope raster based on the reclassification table\nmax_temp_reclassified_pojo &lt;- terra::classify(max_temp_pojo,\n         reclass_table_max_temp, include.lowest = TRUE, right = TRUE)"
  },
  {
    "objectID": "Appendix.html#sec-sec-temp-min",
    "href": "Appendix.html#sec-sec-temp-min",
    "title": "Appendix",
    "section": "Processing Min. Temperature Data",
    "text": "Processing Min. Temperature Data\n\n\nCode\n# read data \n\n# temperatur max\ntmin01 &lt;- rast(\"wc2.1_30s_tmin_01.tif\")\ntmin02 &lt;- rast(\"wc2.1_30s_tmin_02.tif\")\ntmin03 &lt;- rast(\"wc2.1_30s_tmin_03.tif\")\ntmin04 &lt;- rast(\"wc2.1_30s_tmin_04.tif\")\ntmin05 &lt;- rast(\"wc2.1_30s_tmin_05.tif\")\ntmin06 &lt;- rast(\"wc2.1_30s_tmin_06.tif\")\ntmin07 &lt;- rast(\"wc2.1_30s_tmin_07.tif\")\ntmin08 &lt;- rast(\"wc2.1_30s_tmin_08.tif\")\ntmin09 &lt;- rast(\"wc2.1_30s_tmin_09.tif\")\ntmin10 &lt;- rast(\"wc2.1_30s_tmin_10.tif\")\ntmin11 &lt;- rast(\"wc2.1_30s_tmin_11.tif\")\ntmin12 &lt;- rast(\"wc2.1_30s_tmin_12.tif\")\n\n\n\n\nCode\n# LOOP\n\n# Crear una lista con los nombres de los objetos\nlista_temp &lt;- paste0(\"tmin\", sprintf(\"%02d\", 1:12))  \n# Generate names precip01 until precip12\n\n# Inicializar una lista vacía para almacenar los resultados\nlista_tmin_mask &lt;- list()\n\n# Iterar sobre cada objeto y aplicar las operaciones\nfor (i in seq_along(lista_temp)) {\n  # Acceder al objeto con el nombre correspondiente\n  tmin_obj &lt;- get(lista_temp[i])\n  \n  # Aplicar las operaciones crop y mask\n  tmin_crop &lt;- terra::crop(tmin_obj, Aiquile)\n  tmin_mask &lt;- mask(tmin_crop, Aiquile)\n  \n  # Almacenar el resultado en la lista\n  lista_tmin_mask[[i]] &lt;- tmin_mask\n}\n\n# Stack the Values and calc the min for every values in the Rasterstack\n\n# Use rast() to convert the list to a SpatRaster object\nstacked_rasters &lt;- terra::rast(lista_tmin_mask)\n\n# Apply the cellStats function to find the minimum value for each pixel across the stack\nmin_values &lt;- terra::app(stacked_rasters, fun = min, na.rm = TRUE)\n\n\n\n\nCode\nmin_temp_pasorapa &lt;- readRDS(\"min_temp_pasorapa.rds\")\nmin_temp_pojo     &lt;- readRDS(\"min_temp_pojo.rds\")\nmin_temp_aiquile  &lt;- readRDS(\"min_temp_aiquile.rds\")\nmin_temp_totora   &lt;- readRDS(\"min_temp_totora.rds\")\n\n# Create a list of the SpatRaster objects\nraster_list &lt;- merge(min_temp_pasorapa, min_temp_pojo, min_temp_aiquile, min_temp_totora)\n\n# Specify the number of breaks (bins)\nnum_breaks &lt;- 5\n\nbreak_values &lt;- quantile(values(raster_list, na.rm = TRUE), \n           probs = seq(0, 1, length.out = num_breaks + 1))\n\n# Extract numeric values\nnumeric_breaks &lt;- as.numeric(as.character(break_values))\n\n# Create the histogram with equal-frequency breaks\nhist(values(raster_list), breaks = \"FD\", main = \"Histogram of Data Distribution\", \n  xlab = \"Drought Risk Values\", col = \"skyblue\", border = \"black\", plot = TRUE)\n\n# Add vertical lines to represent the breaks\nabline(v = quantile(values(raster_list, na.rm = TRUE), \n       probs = seq(0, 1, length.out = num_breaks + 1)), col = \"red\", lty = 2)\n\n\n\n\nCode\n# Temperature breaks for all municipalities\n\n# Define file names\nfile_names &lt;- c(\"min_temp_pasorapa.rds\", \"min_temp_pojo.rds\",\n                \"min_temp_aiquile.rds\", \"min_temp_totora.rds\")\n\n# Initialize an empty list to store numeric breaks for each municipality\nnumeric_breaks_list &lt;- list()\n\n# Loop over each file name\nfor (file_name in file_names) {\n  # Read the raster file\n  raster_data &lt;- readRDS(file_name)\n  \n  # Calculate the numeric breaks\n  break_values &lt;- quantile(values(raster_data, na.rm = TRUE), \n            probs = seq(0, 1, length.out = num_breaks + 1))\n  \n  # extract breaks as.numeric\n  numeric_breaks &lt;- as.numeric(as.character(break_values))\n  \n  # Extract the municipality name from the file name\n  municipality &lt;- gsub(\".rds\", \"\", file_name)\n  \n  # Store the numeric breaks in the list with the municipality name as the key\n  numeric_breaks_list[[municipality]] &lt;- numeric_breaks\n}\n\n# Print the numeric breaks for each municipality\nprint(numeric_breaks_list)\n\n\n\n\nCode\n### Reclass\n# Create a tibble with the reclassification table\n\n#  0%  20%  40%  60%  80% 100%\n# -3.8  4.3  5.6  7.1  9.8 14.9\n\nreclass_table_min_temp &lt;- tribble(\n  ~from, ~to, ~becomes,\n  -3.8, 4.3, 1,    \n   4.3, 5.6, 0.8,   \n   5.6, 7.1, 0.4,   \n   7.1, 9.8, 0.2,\n   9.8, 14.9, 0\n)\n\n# Reclassify the slope raster based on the reclassification table\nmin_temp_pasorapa_reclassified &lt;- terra::classify(min_temp_pasorapa,\n        reclass_table_min_temp, include.lowest = TRUE, right = TRUE)\n\nmin_temp_pojo_reclassified     &lt;- terra::classify(min_temp_pojo,\n        reclass_table_min_temp, include.lowest = TRUE, right = TRUE)\n\nmin_temp_aiquile_reclassified  &lt;- terra::classify(min_temp_aiquile,\n        reclass_table_min_temp, include.lowest = TRUE, right = TRUE)\n\nmin_temp_totora_reclassified   &lt;- terra::classify(min_temp_totora,\n        reclass_table_min_temp, include.lowest = TRUE, right = TRUE)"
  },
  {
    "objectID": "Appendix.html#sec-sec-inclination",
    "href": "Appendix.html#sec-sec-inclination",
    "title": "Appendix",
    "section": "Processing DEM derived Inclination Data",
    "text": "Processing DEM derived Inclination Data\n\n\nCode\n# Define areas of interest\nareas &lt;- list(\n  pasorapa = Pasorapa,\n  aiquile = Aiquile,\n  totora = totora,\n  pojo = pojo\n)\n\n# Flood Risk Calculation\n# Create a tibble with the reclassification table\nreclass_table_dem &lt;- tribble(\n  ~from, ~to, ~becomes,\n  0, 10, 1,           # 0-10: Plano\n  10, 20, 0.56,       # 10-20: Mod. inclinado\n  20, 30, 0.34,       # 20-30: Inclinado\n  30, 45, 0.2,        # 30-45: Mod. empinado\n  45, Inf,0.09        # 45 and above: Fuert. empinado\n)\n\n# Drought Risk Calculation\n## Create a tibble with the reclassification table\nreclass_table_dem &lt;- tribble(\n  ~from, ~to, ~becomes,\n  0, 10, 0.09,           # 0-10: Plano\n  10, 20, 0.2,           # 10-20: Mod. inclinado\n  20, 30, 0.34,          # 20-30: Inclinado\n  30, 45, 0.56,          # 30-45: Mod. empinado\n  45, Inf, 1             # 45 and above: Fuert. empinado\n)\n\n\n# Loop through areas of interest\nfor (area_name in names(areas)) {\n  # Crop and mask dem\n  dem_crop &lt;- crop(dem, areas[[area_name]])\n  dem_mask &lt;- mask(dem_crop, areas[[area_name]])\n  \n  # Calculate terrain\n  terrain &lt;- terrain(dem_mask)\n  \n  # Reclassify DEM\n  dem_reclassified &lt;- classify(terrain, reclass_table_dem,\n                               include.lowest = TRUE, right = TRUE)\n  \n  # Assign to appropriate variable\n  assign(paste0(\"dem_reclassified_\", area_name), dem_reclassified)\n}"
  },
  {
    "objectID": "Appendix.html#sec-sec-aspect",
    "href": "Appendix.html#sec-sec-aspect",
    "title": "Appendix",
    "section": "Processing DEM derived Aspect Data",
    "text": "Processing DEM derived Aspect Data\n\n\nCode\n# Reclassification of the Aspect Data\n\n### terrain::aspect Pasorapa & Aiquile\naspect_pasorapa &lt;- terrain(dem_mask_pasorapa, \"aspect\")\naspect_aiquile  &lt;- terrain(dem_mask_aiquile, \"aspect\")\n\n# reclass\n# Create a tibble with the reclassification table\nreclass_table_aspect &lt;- tribble(\n  ~from, ~to, ~becomes,\n  -Inf, 45, 0,\n  45, 135, 0.25,\n  135, 225, 1,\n  225, 315, 0.25,\n  315, Inf, 0\n)\n\n# Pasorapa: Reclassify the slope raster based on the reclassification table\naspect_reclassified_aiquile &lt;- terra::classify(aspect_aiquile,\n      reclass_table_aspect, include.lowest = TRUE, right = TRUE)\n\n# Aiquile: Reclassify the slope raster based on the reclassification table\naspect_reclassified_pasorapa &lt;- terra::classify(aspect_pasorapa,\n      reclass_table_aspect, include.lowest = TRUE, right = TRUE)\n\n# read other data\naspect_reclassified_pojo &lt;- readRDS(\"aspect_reclassified_pojo.rds\")\n\naspect_reclassified_totora &lt;- readRDS(\"aspect_reclassified_totora.rds\")"
  },
  {
    "objectID": "Appendix.html#sec-sec-precip",
    "href": "Appendix.html#sec-sec-precip",
    "title": "Appendix",
    "section": "Processing Precipitation",
    "text": "Processing Precipitation\n\n\nCode\n# LOOP\n# Crear una lista con los nombres de los objetos\nlista_precip &lt;- paste0(\"precip\", sprintf(\"%02d\", 1:12))  \n# Genera los nombres de precip01 a precip12\n\n# Inicializar una lista vacía para almacenar los resultados\nlista_precip_mask &lt;- list()\n\n# Iterar sobre cada objeto y aplicar las operaciones\nfor (i in seq_along(lista_precip)) {\n  # Acceder al objeto con el nombre correspondiente\n  precip_obj &lt;- get(lista_precip[i])\n  \n  # Aplicar las operaciones crop y mask\n  precip_crop &lt;- terra::crop(precip_obj, aiquile)\n  precip_mask &lt;- mask(precip_crop, aiquile)\n  \n  # Almacenar el resultado en la lista\n  lista_precip_mask[[i]] &lt;- precip_mask\n}\n\n# Use the first raster as a base for the sum\nsum_raster &lt;- lista_precip_mask[[1]]\n\n# Loop through the remaining rasters and add their values to the sum_raster\nfor (i in 2:length(lista_precip_mask)) {\n  sum_raster &lt;- sum_raster + lista_precip_mask[[i]]\n}\n\n\n\n\nCode\n# Reclassification of the Precipitation Data\n\nprecip_pasorapa &lt;- rast(\"sum_raster_pasorapa.tif\")\nprecip_aiquile  &lt;- rast(\"sum_raster.tif\")\n\nprecip_pojo     &lt;- rast(\"precip_pojo.tif\")\nprecip_totora   &lt;- rast(\"precip_totora.tif\")\n\nprecip_todos    &lt;- rast(\"precip_todos.tif\")\n\n# Reclass\n# Create a tibble with the reclassification table\nreclass_table_precip &lt;- tribble(\n  ~from, ~to, ~becomes,\n  1058.2, Inf,     0,     \n  640,    1058.2,  0.25,  \n  571,    640,     0.5,   \n  513.8,  571,     0.75,  \n  -Inf,   513.8,   1      \n)\n\n# Reclassify the slope raster based on the reclassification table\nprecip_reclassified_pasorapa &lt;- terra::classify(precip_pasorapa,\n          reclass_table_precip, include.lowest = TRUE, right = TRUE)\n\nprecip_reclassified_aiquile &lt;- terra::classify(precip_aiquile,\n          reclass_table_precip, include.lowest = TRUE, right = TRUE)\n\nprecip_reclassified_pojo &lt;- terra::classify(precip_pojo,\n          reclass_table_precip, include.lowest = TRUE, right = TRUE)\n\nprecip_reclassified_totora &lt;- terra::classify(precip_totora,\n          reclass_table_precip, include.lowest = TRUE, right = TRUE)\n\n# All together\nprecip_reclassified_todos &lt;- terra::classify(precip_todos,\n          reclass_table_precip, include.lowest = TRUE, right = TRUE)"
  },
  {
    "objectID": "Appendix.html#sec-sec-weight",
    "href": "Appendix.html#sec-sec-weight",
    "title": "Appendix",
    "section": "Final Raster Calculation and Weighting",
    "text": "Final Raster Calculation and Weighting\n\n\nCode\n# Final Weightings for the Reclassification example: Totora\n\n# Align resolutions \nriver_reclassified &lt;- resample(river_totora, dem_reclassified_totora)\n\naspect_reclassified &lt;- resample(aspect_reclassified_totora, river_reclassified)\n\nmax_temp_reclassified &lt;- resample(max_temp_reclassified_totora, aspect_reclassified)\n\nprecip_reclassified &lt;- resample(precip_reclassified_totora, max_temp_reclassified)\n\ndem_reclassified &lt;- resample(dem_reclassified_totora, precip_reclassified)\n\n# Adjusted weights\nweight_temp_max    &lt;- 0.2\nweight_perspektive &lt;- 0.15\nweight_dem         &lt;- 0.15\nweight_river_dist  &lt;- 0.2\nweight_precip      &lt;- 0.3\n\n# Perform the adjusted weighted combination\nfinal_raster &lt;- weight_temp_max      * max_temp_reclassified +\n                weight_perspektive   * aspect_reclassified +\n                weight_dem           * dem_reclassified +\n                weight_river_dist    * river_reclassified +\n                weight_precip        * precip_reclassified\n\nfinal_raster_totora &lt;- final_raster\n# plot(final_raster)\n\n# Define the weights and data\nweights &lt;- c(0.2, 0.1, 0.1, 0.1, 0.2, 0.3)\ndata_names &lt;- c(\"Max temp\", \"Perspektive\", \"Land Use\", \"DEM\", \n               \"River Data\", \"Precipitation\")\n\n# Create the table\ntable_data &lt;- data.frame(Weight = weights, Data = data_names)\n\n\n\n\nCode\n# Define the municipalities\nmunicipalities &lt;- c(\"pojo\", \"pasorapa\", \"aiquile\", \"totora\")\n\n# Set the number of breaks (bins)\nnum_breaks &lt;- 5\n\n# Loop over each municipality\nfor (municipality in municipalities) {\n  # Get the final raster data for the current municipality\n  final_raster &lt;- switch(municipality,\n                         pojo = final_raster_pojo,\n                         pasorapa = final_raster_pasorapa,\n                         aiquile = final_raster_aiquile,\n                         totora = final_raster_totora)\n  \n    # Check if final_raster is NULL\n  # if (is.null(final_raster)) {\n  #   cat(\"Error: Final raster data is NULL for\", municipality, \"\\n\")\n  # } else {\n    \n    # Compute the break values\n    break_values &lt;- quantile(values(final_raster, na.rm = TRUE), \n                probs = seq(0, 1, length.out = num_breaks + 1))\n    \n    # Capitalize the first letter of the municipality name\n    capitalized_municipality &lt;- str_to_title(municipality)\n    \n    # Create the histogram with equal-frequency breaks\n  hist(values(final_raster), breaks = \"FD\", main = paste(\"Histogram of Drought Risk for\", \n    capitalized_municipality), xlab = \"Drought Risk Values\", \n    col = \"skyblue\", border = \"black\", plot = TRUE)\n    \n    # Add vertical lines to represent the breaks\n    abline(v = break_values, col = \"red\", lty = 2)\n}"
  },
  {
    "objectID": "Appendix.html#sec-sec-results",
    "href": "Appendix.html#sec-sec-results",
    "title": "Appendix",
    "section": "Final Mapping Results",
    "text": "Final Mapping Results\n\n\nCode\n# Define breaks and labels for the reclassification\nbreaks &lt;- numeric_breaks\nlabels &lt;- c(\"Muy bajo\", \"Bajo\", \"Moderado\", \"Alto\", \"Muy alto\")\n\n# Cut the raster values into categorical factors\nfactor_raster &lt;- cut(values(final_raster), breaks = breaks, \n                    labels = labels, include.lowest = TRUE)\n\n# change name\nnames(final_raster) &lt;- \"Drought Risk\"\n\n# Create a new raster with categorized values\nr_categorized         &lt;- final_raster\nvalues(r_categorized) &lt;- as.factor(factor_raster)\n\nif (knitr::is_html_output()) {\n  \n# view\ntmap_mode(\"view\")\n\ntm_shape(r_categorized, labels = \"New Legend Label\") +\n  tm_raster(palette = colors) +  \n  tm_shape(all_municipalities) +\n    tm_borders(lwd = 2, col = \"black\") +\n    tm_layout(frame = FALSE) +\n  tm_text(\"NAME_3\", size = 0.7)\n\n} else if (knitr::is_latex_output()) {\n\n # view\ntmap_mode(\"plot\")\n\ntm_shape(r_categorized, labels = \"New Legend Label\") +\n  tm_raster(palette = colors) +  \n  tm_shape(all_municipalities) +\n    tm_borders(lwd = 2, col = \"black\") +\n    tm_layout(frame = FALSE) +\n  tm_text(\"NAME_3\", size = 0.7) +\n    tm_scale_bar(breaks = c(0, 5, 10), text.size = 0.9, position = c(\"left\")) +  \n  tm_compass(type = \"4star\", size = 6, position = c(\"right\", \"top\")) +\n  tm_credits(\"Author: Johannes Quente\", fontface = \"italic\", align = \"right\") +\n  tm_graticules(alpha = 0.3) +\n  tm_layout(\n    legend.text.size = 1,\n    legend.position = c(\"left\", \"bottom\"),\n    legend.outside = TRUE\n  )\n}"
  },
  {
    "objectID": "Author.html",
    "href": "Author.html",
    "title": "About the Author",
    "section": "",
    "text": "MSc. Johannes Quente\nThis Project has been developed for AGRECOL ANDES\nContact:\nWhatsapp: 0049 16095170961\nEmail: johannes.quente@gmail.com\nLinkedIn: linkedin.com\nGithub: github/Quasto-sketc\nBlog: Wordpress\nCV Resumen:\nJohannes Quente, hailing from the seafarers’ city of Hamburg, Germany, moved to Puerto Montt, Chile, as part of a year-long exchange when he was 16. After completing his high school studies and engaging in social work at the Seafarers’ Mission in the port of Hamburg, he decided to pursue agricultural sciences, specializing in agroecology, at the University of Göttingen.\nFor his master’s degree, Johannes moved to Switzerland to study Geoinformatics at ZHAW. He pursued his Master’s studies in Environment and Natural Resources within the Research Unit Agroecology and Food Systems, and the Geoinformatics research group at ZHAW (Switzerland). His master’s thesis focused on the quantitative environmental impacts of mining.\nTo date, he is being involved in various environmental, governmental, and university projects in Germany, Switzerland and Bolivia, regarding Agricultural, Food Waste and Hydrology Projects."
  }
]